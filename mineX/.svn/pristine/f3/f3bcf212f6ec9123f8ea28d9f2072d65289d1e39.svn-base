<?xml version="1.0" encoding="UTF-8"?>
<project basedir="">
	<property name="runs" value="20" />

	<property name="defaultSpeed" value="1.0" />
	<property name="defaultMode" value="MULTIMODAL" />

	<path id="path.libraries">
		<fileset dir="${properties.project.libDir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${properties.project.libextDir}">
			<include name="**/*.jar" />
		</fileset>
		<pathelement path="${properties.project.classDir}" />
	</path>

	<!-- for ant contrib: important to use the for task include net/sf/antcontrib/antlib.xml and not net/sf/antcontrib/antcontrib.properties -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${basedir}/${properties.project.libextDir}/ant-contrib-1.0b3.jar" />
		</classpath>
	</taskdef>

	<taskdef resource="isochrones/ant/tasks/antlib.xml" classpathref="path.libraries" />

	<target name="commonInfo">
		<echo>ant setup  --> Prepares the entire environment by compiling source code and setting up the database</echo>
		<echo>ant runAlgorithmExperiments --> runs a single test for cities Bozen, San Francisco, Washington DC and Italy</echo>
		<echo>ant runAlgorithmBZ --> runs a single test for city Bozen (writes the results in DB)</echo>
		<echo>ant runAlgorithmSF --> runs a single test for city San Francisco (writes the results in DB)</echo>
		<echo>ant runAlgorithmST --> runs a single test for South Tyrol (writes the results in DB)</echo>
		<echo>ant runAlgorithmDC --> runs a single test for Washington DC (writes the results in DB)</echo>
		<echo>ant runAlgorithmIT --> runs a single test for Italy (writes the results in DB)</echo>
		<echo>ant runAlgorithmGrid --> runs a single test for synthetic Grid network (writes the results in DB)</echo>
		<echo>ant runAlgorithmSpider --> runs a single test for synthetic Spider network (writes the results in DB)</echo>
		<echo>ant runMemoryDurationExperiments_MM --> runs a memory test for BZ,SF,DC,IT (no DB writing) based on the duration</echo>
		<echo>ant runMemoryDurationTestBZ --> runs a memory test for dataset BZ based on the duration</echo>
		<echo>ant runMemoryDurationTestSF --> runs a memory test for dataset SF based on the duration</echo>
		<echo>ant runMemoryDurationTestST --> runs a memory test for dataset ST based on the duration</echo>
		<echo>ant runMemoryDurationTestDC --> runs a memory test for dataset DC based on the duration</echo>
		<echo>ant runMemoryDurationTestIT --> runs a memory test for dataset IT based on the duration</echo>
		<echo>ant runMemoryDurationTestGrid --> runs a single memory test for syntetic grid network (no DB writing) based on the duration</echo>
		<echo>ant runMemoryDurationTestSpider --> runs a single memory test for syntetic spider network (no DB writing) based on the duration</echo>
		<echo>ant runMemorySizeExperiments_MM --> runs a memory test for BZ,SF,DC,IT (no DB writing) based on the result size</echo>
		<echo>ant runMemorySizeTestBZ --> runs a memory test for dataset BZ based on the result size</echo>
		<echo>ant runMemorySizeTestSF --> runs a memory test for dataset SF based on the result size</echo>
		<echo>ant runMemorySizeTestST --> runs a memory test for dataset ST based on the result size</echo>
		<echo>ant runMemorySizeTestDC --> runs a memory test for dataset DC based on the result size</echo>
		<echo>ant runMemorySizeTestIT --> runs a memory test for dataset IT based on the result size</echo>
		<echo>ant runMemorySizeTestGrid --> runs a single memory test for syntetic grid network (no DB writing) based on the result size</echo>
		<echo>ant runMemorySizeTestSpider --> runs a single memory test for syntetic grid network (no DB writing) based on the result size</echo>
		<echo>ant runtimeDurationExperiments_MM --> runs a runtime test for BZ,SF,DC,IT (no DB writing) based on the duration</echo>
		<echo>ant runtimeDurationTestBZ --> runs a runtime test for dataset BZ based on the duration</echo>
		<echo>ant runtimeDurationTestSF --> runs a runtime test for dataset SF based on the duration</echo>
		<echo>ant runtimeDurationTestST --> runs a runtime test for dataset ST based on the duration</echo>
		<echo>ant runtimeDurationTestDC --> runs a runtime test for dataset DC based on the duration</echo>
		<echo>ant runtimeDurationTestIT --> runs a runtime test for dataset IT based on the duration</echo>
		<echo>ant runtimeSizeExperiments_MM --> runs a runtime test for BZ,SF,DC,IT (no DB writing) based on the result size</echo>
		<echo>ant runtimeSizeTestBZ --> runs a runtime test for dataset BZ based on the result size</echo>
		<echo>ant runtimeSizeTestSF --> runs a runtime test for dataset SF based on the result size</echo>
		<echo>ant runtimeSizeTestST --> runs a runtime test for dataset ST based on the result size</echo>
		<echo>ant runtimeSizeTestDC --> runs a runtime test for dataset DC based on the result size</echo>
		<echo>ant runtimeSizeTestIT --> runs a runtime test for dataset IT based on the result size</echo>
		<echo>ant runtimeFixedSizeExperiments_MM --> runs a runtime test for BZ,SF,DC,IT (no DB writing) based on the result size</echo>
		<echo>ant runtimeFixedSizeTestBZ --> runs a runtime test for dataset BZ based on the result size</echo>
		<echo>ant runtimeFixedSizeTestSF --> runs a runtime test for dataset SF based on the result size</echo>
		<echo>ant runtimeFixedSizeTestST --> runs a runtime test for dataset ST based on the result size</echo>
		<echo>ant runtimeFixedSizeTestDC --> runs a runtime test for dataset DC based on the result size</echo>
		<echo>ant runtimeFixedSizeTestIT --> runs a runtime test for dataset IT based on the result size</echo>

	</target>

	<!-- - - - - - - - - - - - - - - - - - 
		          target: compile                      
		         - - - - - - - - - - - - - - - - - -->
	<target name="compile" depends="clean" description="Compiles classes and prepares test environment">
		<mkdir dir="${properties.project.classDir}" />
		<echo message="Compiling isochrones" level="info" />
		<javac srcdir="${properties.project.srcDir}" destdir="${properties.project.classDir}" verbose="true" failonerror="true" debug="on" source="1.6">
			<classpath>
				<fileset dir="${properties.project.libDir}">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</javac>
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
	          target: clean                      
	         - - - - - - - - - - - - - - - - - -->
	<target name="clean">
		<delete failonerror="false">
			<fileset dir="${properties.project.classDir}" includes="**/*.class" />
		</delete>
	</target>

	<target name="cleanBenchmarkLogs">
		<mkdir dir="${properties.parameters.benchmark.outputDir}" />
	</target>

	<target name="makeJar" depends="compile">
		<jar destfile="${properties.project.deployDir}/${properties.project.jarName}" basedir="${properties.project.classDir}" />
	</target>

	<!-- ================================= 
	          target: setup              
	         ================================= -->
	<target name="setup" depends="setupDB, compile" description="description">
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
			          target: setupDB                      
			         - - - - - - - - - - - - - - - - - -->
	<target name="setupDB" description="Create database tables and indeces">
		<foreach list="${properties.dataSets.BZ(shortName)},${properties.dataSets.ST(shortName)},${properties.dataSets.IT(shortName)},${properties.dataSets.SF(shortName)},${properties.dataSets.DC(shortName)}" target="setupDataSet" param="dataset" delimiter=",">
		</foreach>
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
					          target: setupDataSet                     
					         - - - - - - - - - - - - - - - - - -->
	<target name="setupDataSet">
		<property name="dataset" value="${properties.dataSets.BZ(shortName)}" />
		<echo message="Starting the Setup for dataset ${dataset}:" />
		<java classname="isochrones.tools.SetupTool" classpathref="path.libraries" fork="true">
			<arg value="dbType=${properties.project.database}" />
			<arg value="dataset=${dataset}" />
			<arg value="mode=MULTIMODAL" />
			<arg value="checkIndexes=${properties.project.database(indexCheck)}" />
		</java>
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
		          target: runAlgorithmOnEveryDS                      
		         - - - - - - - - - - - - - - - - - -->
	<target name="runAlgorithmOnEveryDS" depends="runAlgorithmBZ,runAlgorithmSF,runAlgorithmDC,runAlgorithmST,runAlgorithmIT" />

	<!-- ================================= 
	          target: runAlgorithmBZ              
	         ================================= -->
	<target name="runAlgorithmBZ" description="description">
		<antcall target="runAlgorithm">
			<param name="dataset" value="${properties.dataSets.BZ(shortName)}" />
			<param name="name" value="${properties.dataSets.BZ(name)}" />
			<param name="nOI" value="${properties.dataSets.BZ.parameters.poi.central.nodeOfInterests}" />
			<param name="location" value="${properties.dataSets.BZ.parameters.poi.central.locationOfInterests}" />
			<param name="targetTime" value="${properties.dataSets.BZ.parameters.arrivalDay}-${properties.dataSets.BZ.parameters.arrivalDay}" />
			<param name="dMax" value="${properties.dataSets.BZ.parameters.dMax}" />
		</antcall>
	</target>


	<!-- ================================= 
	          target: runAlgorithmSF              
	         ================================= -->
	<target name="runAlgorithmSF" description="description">
		<antcall target="runAlgorithm">
			<param name="dataset" value="${properties.dataSets.SF(shortName)}" />
			<param name="name" value="${properties.dataSets.SF(name)}" />
			<param name="nOI" value="${properties.dataSets.SF.parameters.poi.central.nodeOfInterests}" />
			<param name="lOI" value="${properties.dataSets.SF.parameters.poi.central.locationOfInterests}" />
			<param name="targetTime" value="${properties.dataSets.SF.parameters.arrivalDay}T${properties.dataSets.SF.parameters.arrivalTime}" />
			<param name="dMax" value="${properties.dataSets.SF.parameters.dMax}" />
		</antcall>
	</target>

	<!-- ================================= 
		        target: runAlgorithmDC              
		       ================================= -->
	<target name="runAlgorithmDC" description="description">
		<echo message="Now starting the tests for isochrones for Washington DC:" />
		<antcall target="runAlgorithm">
			<param name="dataset" value="${properties.dataSets.DC(shortName)}" />
			<param name="name" value="${properties.dataSets.DC(name)}" />
			<param name="nOI" value="${properties.dataSets.DC.parameters.poi.central.nodeOfInterests}" />
			<param name="lOI" value="${properties.dataSets.DC.parameters.poi.central.locationOfInterests}" />
			<param name="targetTime" value="${properties.dataSets.DC.parameters.arrivalDay}T${properties.dataSets.DC.parameters.arrivalTime}" />
			<param name="dMax" value="${properties.dataSets.DC.parameters.dMax}" />
		</antcall>
	</target>

	<!-- ================================= 
	          target: runAlgorithmST              
	         ================================= -->
	<target name="runAlgorithmST" description="description">
		<antcall target="runAlgorithm">
			<param name="dataset" value="${properties.dataSets.ST(shortName)}" />
			<param name="name" value="${properties.dataSets.ST(name)}" />
			<param name="nOI" value="${properties.dataSets.ST.parameters.poi.central.nodeOfInterests}" />
			<param name="lOI" value="${properties.dataSets.ST.parameters.poi.central.locationOfInterests}" />
			<param name="targetTime" value="${properties.dataSets.ST.parameters.arrivalDay}T${properties.dataSets.ST.parameters.arrivalTime}" />
			<param name="dMax" value="${properties.dataSets.ST.parameters.dMax}" />
		</antcall>
	</target>

	<!-- ================================= 
		          target: runAlgorithmIT              
		         ================================= -->
	<target name="runAlgorithmIT" description="description">
		<antcall target="runAlgorithm">
			<param name="dataset" value="${properties.dataSets.IT(shortName)}" />
			<param name="name" value="${properties.dataSets.IT(name)}" />
			<param name="nOI" value="${properties.dataSets.IT.parameters.poi.central.nodeOfInterests}" />
			<param name="lOI" value="${properties.dataSets.IT.parameters.poi.central.locationOfInterests}" />
			<param name="targetTime" value="${properties.dataSets.IT.parameters.arrivalDay}T${properties.dataSets.IT.parameters.arrivalTime}" />
			<param name="dMax" value="${properties.dataSets.IT.parameters.dMax}" />
		</antcall>
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
	          target: runAlgorithm                      
	         - - - - - - - - - - - - - - - - - -->
	<target name="runAlgorithm">
		<!-- default parameters, can be overwritten -->
		<property name="dataset" value="SetMe" />
		<property name="name" value="SetMe" />
		<property name="lOI" value="SetMe" />
		<property name="nOI" value="SetMe" />
		<property name="targetTime" value="SetMe" />
		<property name="dMax" value="SetMe" />
		<property name="outputWriting" value="SetMe" />
		<property name="debug" value="false" />
		<property name="algorithmName" value="${properties.project.algorithm(name)}" />
		<property name="algorithmClassName" value="${properties.project.algorithm(className)}" />
		<property name="useDensity" value="SetMe" />
		<property name="densityLimit" value="SetMe" />

		<!-- overide default properties in some special cases -->
		<property name="speed" value="${defaultSpeed}" />
		<property name="mode" value="${defaultMode}" />

		<echo message="Starting the tests for isochrones for ${name}" />
		<java classname="isochrones.launchers.algorithm.IsochroneLauncher" classpathref="path.libraries" fork="true">
			<arg value="dbType=${properties.project.database}" />
			<arg value="algorithmName=${algorithmName}" />
			<arg value="algorithmClassName=${algorithmClassName}" />
			<arg value="dataset=${dataset}" />
			<arg value="dMax=${dMax}" />
			<arg value="lOI=${lOI}" />
			<arg value="nOI=${nOI}" />
			<arg value="targetTime=${targetTime}" />
			<arg value="speed=${speed}" />
			<arg value="mode=${mode}" />
			<arg value="outputWriting=${outputWriting}" />
			<arg value="debug=${debug}" />
			<arg value="useDensity=${useDensity}" />
			<arg value="densityLimit=${densityLimit}" />
			<arg value="maxMemorySize=${maxMemorySize}" />
			<jvmarg value="-Xmx${properties.tests(reservedMemorySize)}m" />
		</java>
	</target>


	<!-- ######## Runtime tests part ######## -->


	<!-- Start of runtime duration tests -->

	<!-- ================================= 
		          target: runtimeDurationExperiments_MM 
		         ================================= -->
	<target name="runtimeDurationExperiments_MM">
		<antcall target="runtimeDurationExperimentBZ" />
		<antcall target="runtimeDurationExperimentSF" />
		<antcall target="runtimeDurationExperimentST" />
		<antcall target="runtimeDurationExperimentIT" />
	</target>

	<!-- ================================= 
          target: runtimeDurationExperimentBZ              
         ================================= -->
	<target name="runtimeDurationExperimentBZ" description="description">
		<antcall target="runtimeDurationExperiment">
			<param name="runs" value="50" />
		</antcall>
	</target>

	<!-- ================================= 
	          target: runtimeDurationExperimentDetailedBZ              
	         ================================= -->
	<target name="runtimeDurationExperimentDetailedBZ" description="description">
		<antcall target="runtimeDurationExperimentBZ">
			<param name="algorithmName" value="${properties.project.algorithm(name)}Det" />
			<param name="algorithmClassName" value="${properties.project.algorithm.durationDetailClassName}" />
			<param name="testClassName" value="${properties.tests.runtimeDurationTestDetailed(className)}" />
			<param name="visibleColumns" value="3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26" />
		</antcall>
	</target>


	<!-- ================================= 
		          target: runtimeDurationExperimentSF              
		         ================================= -->
	<target name="runtimeDurationExperimentSF" description="description">
		<antcall target="runtimeDurationExperiment">
			<param name="dataset" value="${properties.dataSets.SF(shortName)}" />
			<param name="name" value="${properties.dataSets.SF(name)}" />
			<param name="dMax" value="${properties.dataSets.SF.parameters.dMax}" />
			<param name="targetDay" value="${properties.dataSets.SF.parameters.arrivalDay}" />
			<param name="targetTime" value="${properties.dataSets.SF.parameters.arrivalTime}" />
			<param name="nOI" value="${properties.dataSets.SF.parameters.poi.central.nodeOfInterests}" />
			<param name="checkPoints" value="${properties.dataSets.SF.parameters.durationCheckPoints}" />
			<param name="runs" value="50" />
		</antcall>
	</target>

	<!-- ================================= 
		          target: runtimeDurationExperimentDetailedSF              
		         ================================= -->
	<target name="runtimeDurationExperimentDetailedSF" description="description">
		<antcall target="runtimeDurationExperimentSF">
			<param name="algorithmName" value="${properties.project.algorithm(name)}Det" />
			<param name="algorithmClassName" value="${properties.project.algorithm.durationDetailClassName}" />
			<param name="testClassName" value="${properties.tests.runtimeDurationTestDetailed(className)}" />
			<param name="visibleColumns" value="3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26" />
		</antcall>
	</target>

	<!-- ================================= 
			          target: runtimeDurationExperimentST              
			         ================================= -->
	<target name="runtimeDurationExperimentST" description="description">
		<antcall target="runtimeDurationExperiment">
			<param name="dataset" value="${properties.dataSets.ST(shortName)}" />
			<param name="name" value="${properties.dataSets.ST(name)}" />
			<param name="dMax" value="${properties.dataSets.ST.parameters.dMax}" />
			<param name="targetDay" value="${properties.dataSets.ST.parameters.arrivalDay}" />
			<param name="targetTime" value="${properties.dataSets.ST.parameters.arrivalTime}" />
			<param name="nOI" value="${properties.dataSets.ST.parameters.poi.central.nodeOfInterests}" />
			<param name="checkPoints" value="${properties.dataSets.ST.parameters.durationCheckPoints}" />
			<param name="runs" value="50" />
		</antcall>
	</target>

	<!-- ================================= 
			          target: runtimeDurationExperimentDetailedST              
			         ================================= -->
	<target name="runtimeDurationExperimentDetailedST" description="description">
		<antcall target="runtimeDurationExperimentST">
			<param name="algorithmName" value="${properties.project.algorithm(name)}Det" />
			<param name="algorithmClassName" value="${properties.project.algorithm.durationDetailClassName}" />
			<param name="testClassName" value="${properties.tests.runtimeDurationTestDetailed(className)}" />
			<param name="visibleColumns" value="3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26" />
		</antcall>
	</target>

	<!-- ================================= 
          target: runtimeDurationExperimentIT              
         ================================= -->
	<target name="runtimeDurationExperimentIT" description="description">
		<antcall target="runtimeDurationExperiment">
			<param name="dataset" value="${properties.dataSets.IT(shortName)}" />
			<param name="name" value="${properties.dataSets.IT(name)}" />
			<param name="dMax" value="${properties.dataSets.IT.parameters.dMax}" />
			<param name="targetDay" value="${properties.dataSets.IT.parameters.arrivalDay}" />
			<param name="targetTime" value="${properties.dataSets.IT.parameters.arrivalTime}" />
			<param name="nOI" value="${properties.dataSets.IT.parameters.poi.central.nodeOfInterests}" />
			<param name="checkPoints" value="${properties.dataSets.IT.parameters.durationCheckPoints}" />
			<param name="runs" value="10" />
		</antcall>
	</target>

	<!-- ================================= 
				          target: runtimeDurationExperimentDetailedIT              
				         ================================= -->
	<target name="runtimeDurationExperimentDetailedIT" description="description">
		<antcall target="runtimeDurationExperimentIT">
			<param name="algorithmName" value="${properties.project.algorithm(name)}Det" />
			<param name="algorithmClassName" value="${properties.project.algorithm.durationDetailClassName}" />
			<param name="testClassName" value="${properties.tests.runtimeDurationTestDetailed(className)}" />
			<param name="visibleColumns" value="3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26" />
		</antcall>
	</target>



	<!-- - - - - - - - - - - - - - - - - - 
          target: runtimeDurationExperiment                      
         - - - - - - - - - - - - - - - - - -->
	<target name="runtimeDurationExperiment" description="@override {dataset,name,dMax,targetTime,checkPoints optional: {runs,singleBreakpoint,clearDiskCache}">
		<property name="runs" value="20" />
		<property name="singleBreakpoint" value="false" />
		<property name="visibleColumns" value="3,4" />


		<!-- mutual properties -->
		<property name="algorithmName" value="${properties.project.algorithm(name)}" />
		<property name="mode" value="${properties.tests.runtimeDurationTest.mode}" />
		<property name="dataset" value="${properties.dataSets.BZ(shortName)}" />
		<property name="name" value="${properties.dataSets.BZ(name)}" />
		<property name="dMax" value="${properties.dataSets.BZ.parameters.dMax}" />
		<property name="checkPoints" value="${properties.dataSets.BZ.parameters.durationCheckPoints}" />
		<property name="targetDay" value="${properties.dataSets.BZ.parameters.arrivalDay}" />
		<property name="targetTime" value="${properties.dataSets.BZ.parameters.arrivalTime}" />
		<property name="nOI" value="${properties.dataSets.BZ.parameters.poi.central.nodeOfInterests}" />

		<property name="outDir" value="out" />
		<property name="fileSuffix" value="csv" />

		<!-- some conditions for the file -->
		<condition property="prefix" value="${algorithmName}_${dataset}_${mode}_${lOI}_${targetTime}_runtime_duration">
			<not>
				<isset property="nOI" />
			</not>
		</condition>
		<!-- only if property ${nOI} is not set -->
		<property name="prefix" value="${algorithmName}_${dataset}_${mode}_${nOI}_${targetTime}_runtime_duration" />

		<!-- append density identifier if property densityLimit is not set -->
		<condition property="outfilePrefix" value="${prefix}_DL${densityLimit}">
			<isset property="densityLimit" />
		</condition>
		<property name="outfilePrefix" value="${prefix}" />

		<property name="network" value="" />
		<echo message="Outfile path is: ${basedir}/${outDir}/${outfilePrefix}.${fileSuffix}" />

		<var name="appendOutput" value="false" />
		<for begin="1" end="${runs}" param="iter" step="1">
			<sequential>
				<echo>Iteration @{iter} of ${runs}. Append output: ${appendOutput} </echo>
				<if>
					<equals arg1="${singleBreakpoint}" arg2="true" />
					<then>
						<for list="${checkPoints}" param="checkPoint" delimiter=",">
							<sequential>
								<antcall target="runtimeDurationTest">
									<!-- deprecated -->
									<param name="frequency" value="1" />
									<param name="appendOutput" value="${appendOutput}" />
									<param name="dataset" value="${dataset}" />
									<param name="name" value="${name}" />
									<param name="nOI" value="${nOI}" />
									<param name="targetTime" value="${targetDay}T${targetTime}" />
									<param name="dMax" value="@{checkPoint}" />
									<param name="durationCheckPoints" value="@{checkPoint}" />
									<param name="outFile" value="${outfilePrefix}.${fileSuffix}" />
									<param name="outDir" value="${outDir}" />
								</antcall>
								<var name="appendOutput" value="true" />
							</sequential>
						</for>
					</then>
					<else>
						<antcall target="runtimeDurationTest">
							<!-- deprecated -->
							<param name="frequency" value="1" />
							<param name="appendOutput" value="${appendOutput}" />
							<param name="dataset" value="${dataset}" />
							<param name="name" value="${name}" />
							<param name="nOI" value="${nOI}" />
							<param name="targetTime" value="${targetDay}T${targetTime}" />
							<param name="dMax" value="${dMax}" />
							<param name="durationCheckPoints" value="${checkPoints}" />
							<param name="outFile" value="${outfilePrefix}.${fileSuffix}" />
							<param name="outDir" value="${outDir}" />
						</antcall>
					</else>
				</if>
				<var name="appendOutput" value="true" />
			</sequential>
		</for>

		<tstamp>
			<format property="touch.time" pattern="yyyyMMdd_hh:mm" />
		</tstamp>
		<echo message="time stamp ${touch.time}" />
		<copy file="${outDir}/${outfilePrefix}_avg.csv" tofile="${outDir}/${outfilePrefix}_avg_${touch.time}.csv" failonerror="false" />
		<avg fileIn="${basedir}/${outDir}/${outfilePrefix}.csv" fileOut="${basedir}/${outDir}/${outfilePrefix}_avg.csv" columnIndex="2" visibleColumns="${visibleColumns}" />
		<echo message="Runtime duration experiment has been written into the file ${basedir}/${outDir}/${outfilePrefix}_avg.csv" />
	</target>


	<!-- - - - - - - - - - - - - - - - - - 
	          target: memoryDurationExperiment                      
	         - - - - - - - - - - - - - - - - - -->
	<target name="memoryDurationExperiment" description="@override {dataset,name,dMax,targetTime,checkPoints optional: {singleBreakpoint}">
		<property name="singleBreakpoint" value="false" />
		<property name="visibleColumns" value="3,4" />

		<!-- mutual properties -->
		<property name="algorithmName" value="${properties.project.algorithm(name)}" />
		<property name="mode" value="${properties.tests.memoryDurationTest.mode}" />
		<property name="dataset" value="${properties.dataSets.BZ(shortName)}" />
		<property name="name" value="${properties.dataSets.BZ(name)}" />
		<property name="dMax" value="${properties.dataSets.BZ.parameters.dMax}" />
		<property name="checkPoints" value="${properties.dataSets.BZ.parameters.durationCheckPoints}" />
		<property name="targetDay" value="${properties.dataSets.BZ.parameters.arrivalDay}" />
		<property name="targetTime" value="${properties.dataSets.BZ.parameters.arrivalTime}" />
		<property name="nOI" value="${properties.dataSets.BZ.parameters.poi.central.nodeOfInterests}" />

		<property name="outDir" value="out" />
		<property name="fileSuffix" value="csv" />

		<!-- some conditions for the file -->
		<condition property="prefix" value="${algorithmName}_${dataset}_${mode}_${lOI}_${targetTime}_memory_duration">
			<not>
				<isset property="nOI" />
			</not>
		</condition>
		<!-- only if property ${nOI} is not set -->
		<property name="prefix" value="${algorithmName}_${dataset}_${mode}_${nOI}_${targetTime}_memory_duration" />

		<!-- append density identifier if property densityLimit is not set -->
		<condition property="outfilePrefix" value="${prefix}_DL${densityLimit}">
			<isset property="densityLimit" />
		</condition>
		<property name="outfilePrefix" value="${prefix}" />

		<property name="network" value="" />
		<echo message="Outfile path is: ${basedir}/${outDir}/${outfilePrefix}.${fileSuffix}" />

		<var name="appendOutput" value="false" />

		<if>
			<equals arg1="${singleBreakpoint}" arg2="true" />
			<then>
				<for list="${checkPoints}" param="checkPoint" delimiter=",">
					<sequential>
						<antcall target="memoryDurationTest">
							<param name="appendOutput" value="${appendOutput}" />
							<param name="dataset" value="${dataset}" />
							<param name="name" value="${name}" />
							<param name="nOI" value="${nOI}" />
							<param name="targetTime" value="${targetDay}T${targetTime}" />
							<param name="dMax" value="@{checkPoint}" />
							<param name="durationCheckPoints" value="@{checkPoint}" />
							<param name="outFile" value="${outfilePrefix}.${fileSuffix}" />
							<param name="outDir" value="${outDir}" />
						</antcall>
						<var name="appendOutput" value="true" />
					</sequential>
				</for>
			</then>
			<else>
				<antcall target="memoryDurationTest">
					<!-- deprecated -->
					<param name="appendOutput" value="${appendOutput}" />
					<param name="dataset" value="${dataset}" />
					<param name="name" value="${name}" />
					<param name="nOI" value="${nOI}" />
					<param name="targetTime" value="${targetDay}T${targetTime}" />
					<param name="dMax" value="${dMax}" />
					<param name="durationCheckPoints" value="${checkPoints}" />
					<param name="outFile" value="${outfilePrefix}.${fileSuffix}" />
					<param name="outDir" value="${outDir}" />
				</antcall>
			</else>
		</if>

		<tstamp>
			<format property="touch.time" pattern="yyyyMMdd_hh:mm" />
		</tstamp>
		<echo message="time stamp ${touch.time}" />
		<copy file="${outDir}/${outfilePrefix}_avg.csv" tofile="${outDir}/${outfilePrefix}_avg_${touch.time}.csv" failonerror="false" />
		<avg fileIn="${basedir}/${outDir}/${outfilePrefix}.csv" fileOut="${basedir}/${outDir}/${outfilePrefix}_avg.csv" columnIndex="2" visibleColumns="${visibleColumns}" />
		<echo message="Runtime duration experiment has been written into the file ${basedir}/${outDir}/${outfilePrefix}_avg.csv" />
	</target>


	<!-- ================================= 
		          target: runtimeDurationExperimentsVarTArrival              
		         ================================= -->
	<target name="runtimeDurationExperimentsVarTArrival" description="description">
		<antcall target="runtimeDurationExperimentsVarT_BZ" />
		<antcall target="runtimeDurationExperimentsVarT_SF" />
		<antcall target="runtimeDurationExperimentsVarT_ST" />
		<antcall target="runtimeDurationExperimentsVarT_IT" />
	</target>


	<!-- - - - - - - - - - - - - - - - - - 
          target: runtimeDurationExperimentsVarT_BZ                      
         - - - - - - - - - - - - - - - - - -->
	<target name="runtimeDurationExperimentsVarT_BZ" description="description">
		<delete failonerror="false">
			<fileset dir="${basedir}/out/lowfrequent">
				<include name="*${properties.dataSets.BZ}*_runtime_duration.csv" />
			</fileset>
			<fileset dir="${basedir}/out/highfrequent">
				<include name="*${properties.dataSets.BZ}*_runtime_duration.csv" />
			</fileset>
			<fileset dir="${basedir}/out/mediumfrequent">
				<include name="*${properties.dataSets.BZ}*_runtime_duration.csv" />
			</fileset>
		</delete>

		<loadproperties srcFile="${basedir}/in/${properties.dataSets.BZ(shortName)}_arrivaltimes.properties" />
		<foreach list="${lowfrequent.values}" target="runtimeDurationTestBZ" param="targetTime" delimiter=",">
			<param name="useDensity" value="true" />
			<param name="outputDir" value="${basedir}/out/lowfrequent" />
		</foreach>
		<foreach list="${highfrequent.values}" target="runtimeDurationTestBZ" param="targetTime" delimiter=",">
			<param name="useDensity" value="true" />
			<param name="outputDir" value="${basedir}/out/highfrequent" />
		</foreach>

		<foreach list="${mediumfrequent.values}" target="runtimeDurationTestBZ" param="targetTime" delimiter=",">
			<param name="useDensity" value="true" />
			<param name="outputDir" value="${basedir}/out/mediumfrequent" />
		</foreach>
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
	          target: runtimeDurationExperimentsVarT_SF                      
	         - - - - - - - - - - - - - - - - - -->
	<target name="runtimeDurationExperimentsVarT_SF" description="description">
		<delete failonerror="false">
			<fileset dir="${basedir}/out/lowfrequent">
				<include name="*${properties.dataSets.SF}*_runtime_duration.csv" />
			</fileset>
			<fileset dir="${basedir}/out/highfrequent">
				<include name="*${properties.dataSets.SF}*_runtime_duration.csv" />
			</fileset>
			<fileset dir="${basedir}/out/mediumfrequent">
				<include name="*${properties.dataSets.SF}*_runtime_duration.csv" />
			</fileset>
		</delete>

		<loadproperties srcFile="${basedir}/in/${properties.dataSets.SF(shortName)}_arrivaltimes.properties" />
		<foreach list="${lowfrequent.values}" target="runtimeDurationTestSF" param="targetTime" delimiter=",">
			<param name="useDensity" value="true" />
			<param name="outputDir" value="${basedir}/out/lowfrequent" />
		</foreach>
		<foreach list="${highfrequent.values}" target="runtimeDurationTestSF" param="targetTime" delimiter=",">
			<param name="useDensity" value="true" />
			<param name="outputDir" value="${basedir}/out/highfrequent" />
		</foreach>

		<foreach list="${mediumfrequent.values}" target="runtimeDurationTestSF" param="targetTime" delimiter=",">
			<param name="useDensity" value="true" />
			<param name="outputDir" value="${basedir}/out/mediumfrequent" />
		</foreach>
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
	          target: runtimeDurationExperimentsVarT_ST                      
	         - - - - - - - - - - - - - - - - - -->
	<target name="runtimeDurationExperimentsVarT_ST" description="description">
		<delete failonerror="false">
			<fileset dir="${basedir}/out/lowfrequent">
				<include name="*${properties.dataSets.ST}*_runtime_duration.csv" />
			</fileset>
			<fileset dir="${basedir}/out/highfrequent">
				<include name="*${properties.dataSets.ST}*_runtime_duration.csv" />
			</fileset>
			<fileset dir="${basedir}/out/mediumfrequent">
				<include name="*${properties.dataSets.ST}*_runtime_duration.csv" />
			</fileset>
		</delete>

		<loadproperties srcFile="${basedir}/in/${properties.dataSets.ST(shortName)}_arrivaltimes.properties" />
		<foreach list="${lowfrequent.values}" target="runtimeDurationTestST" param="targetTime" delimiter=",">
			<param name="useDensity" value="true" />
			<param name="outputDir" value="${basedir}/out/lowfrequent" />
		</foreach>
		<foreach list="${highfrequent.values}" target="runtimeDurationTestST" param="targetTime" delimiter=",">
			<param name="useDensity" value="true" />
			<param name="outputDir" value="${basedir}/out/highfrequent" />
		</foreach>

		<foreach list="${mediumfrequent.values}" target="runtimeDurationTestST" param="targetTime" delimiter=",">
			<param name="useDensity" value="true" />
			<param name="outputDir" value="${basedir}/out/mediumfrequent" />
		</foreach>
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
	          target: runtimeDurationExperimentsVarT_IT                      
	         - - - - - - - - - - - - - - - - - -->
	<target name="runtimeDurationExperimentsVarT_IT" description="description">
		<delete failonerror="false">
			<fileset dir="${basedir}/out/lowfrequent">
				<include name="*${properties.dataSets.IT}*_runtime_duration.csv" />
			</fileset>
			<fileset dir="${basedir}/out/highfrequent">
				<include name="*${properties.dataSets.IT}*_runtime_duration.csv" />
			</fileset>
			<fileset dir="${basedir}/out/mediumfrequent">
				<include name="*${properties.dataSets.IT}*_runtime_duration.csv" />
			</fileset>
		</delete>

		<loadproperties srcFile="${basedir}/in/${properties.dataSets.IT(shortName)}_arrivaltimes.properties" />
		<foreach list="${lowfrequent.values}" target="runtimeDurationTestIT" param="targetTime" delimiter=",">
			<param name="useDensity" value="true" />
			<param name="outputDir" value="${basedir}/out/lowfrequent" />
		</foreach>
		<foreach list="${highfrequent.values}" target="runtimeDurationTestIT" param="targetTime" delimiter=",">
			<param name="useDensity" value="true" />
			<param name="outputDir" value="${basedir}/out/highfrequent" />
		</foreach>

		<foreach list="${mediumfrequent.values}" target="runtimeDurationTestIT" param="targetTime" delimiter=",">
			<param name="useDensity" value="true" />
			<param name="outputDir" value="${basedir}/out/mediumfrequent" />
		</foreach>
	</target>



	<!-- ================================= 
			          target: runtimeDurationExperiments_UM              
			         ================================= -->
	<target name="runtimeDurationExperiments_UM">
		<antcall target="runtimeDurationTestBZWalking" />
		<antcall target="runtimeDurationTestSFWalking" />
		<!--antcall target="runtimeDurationTestDCWalking" /-->
		<antcall target="runtimeDurationTestSTWalking" />
		<antcall target="runtimeDurationTestITWalking" />
	</target>

	<!-- ================================= 
	          target: runtimeDurationTestBZ              
	         ================================= -->
	<target name="runtimeDurationTestBZ">
		<property name="durationCheckPoints" value="${properties.dataSets.BZ.parameters.durationCheckPoints}" />
		<property name="targetTime" value="${properties.dataSets.BZ.parameters.arrivalDay}T${properties.dataSets.BZ.parameters.arrivalTime}" />
		<property name="nOI" value="${properties.dataSets.BZ.parameters.poi.central.nodeOfInterests}" />
		<property name="lOI" value="${properties.dataSets.BZ.parameters.poi.central.locationOfInterests}" />
		<antcall target="runtimeDurationTest">
			<param name="dataset" value="${properties.dataSets.BZ(shortName)}" />
			<param name="name" value="${properties.dataSets.BZ(name)}" />
			<param name="nOI" value="${nOI}" />
			<param name="lOI" value="${lOI}" />
			<param name="targetTime" value="${targetTime}" />
			<param name="dMax" value="${properties.dataSets.BZ.parameters.dMax}" />
			<param name="durationCheckPoints" value="${durationCheckPoints}" />
		</antcall>
	</target>


	<!-- ================================= 
	          target: runtimeDurationTestDetailedBZ              
	         ================================= -->
	<target name="runtimeDurationTestDetailedBZ">
		<property name="durationCheckPoints" value="${properties.dataSets.BZ.parameters.durationCheckPoints}" />
		<property name="targetTime" value="${properties.dataSets.BZ.parameters.arrivalDay}T${properties.dataSets.BZ.parameters.arrivalTime}" />
		<antcall target="runtimeDurationTestDetailed">
			<param name="dataset" value="${properties.dataSets.BZ(shortName)}" />
			<param name="name" value="${properties.dataSets.BZ(name)}" />
			<param name="nOI" value="${properties.dataSets.BZ.parameters.poi.central.nodeOfInterests}" />
			<param name="lOI" value="${properties.dataSets.BZ.parameters.poi.central.locationOfInterests}" />
			<param name="targetTime" value="${targetTime}" />
			<param name="dMax" value="${properties.dataSets.BZ.parameters.dMax}" />
			<param name="durationCheckPoints" value="${durationCheckPoints}" />
			<param name="frequency" value="50" />
		</antcall>
	</target>


	<!-- ================================= 
          target: runtimeDurationTestBZWalking              
         ================================= -->
	<target name="runtimeDurationTestBZWalking">
		<antcall target="runtimeDurationTestBZ">
			<param name="mode" value="UNIMODAL" />
		</antcall>
	</target>

	<!-- ================================= 
          target: runtimeDurationTestSF              
         ================================= -->
	<target name="runtimeDurationTestSF">
		<property name="durationCheckPoints" value="${properties.dataSets.SF.parameters.durationCheckPoints}" />
		<property name="targetTime" value="${properties.dataSets.SF.parameters.arrivalDay}T${properties.dataSets.SF.parameters.arrivalTime}" />
		<property name="nOI" value="${properties.dataSets.SF.parameters.poi.central.nodeOfInterests}" />
		<property name="lOI" value="${properties.dataSets.SF.parameters.poi.central.locationOfInterests}" />
		<antcall target="runtimeDurationTest">
			<param name="dataset" value="${properties.dataSets.SF(shortName)}" />
			<param name="name" value="${properties.dataSets.SF(name)}" />
			<param name="nOI" value="${nOI}" />
			<param name="lOI" value="${lOI}" />
			<param name="targetTime" value="${targetTime}" />
			<param name="dMax" value="${properties.dataSets.SF.parameters.dMax}" />
			<param name="durationCheckPoints" value="${durationCheckPoints}" />
		</antcall>
	</target>

	<!-- ================================= 
	          target: runtimeDurationTestDetailedSF              
	         ================================= -->
	<target name="runtimeDurationTestDetailedSF">
		<property name="durationCheckPoints" value="${properties.dataSets.SF.parameters.durationCheckPoints}" />
		<property name="targetTime" value="${properties.dataSets.SF.parameters.arrivalDay}T${properties.dataSets.SF.parameters.arrivalTime}" />
		<antcall target="runtimeDurationTestDetailed">
			<param name="dataset" value="${properties.dataSets.SF(shortName)}" />
			<param name="name" value="${properties.dataSets.SF(name)}" />
			<param name="nOI" value="${properties.dataSets.SF.parameters.poi.central.nodeOfInterests}" />
			<param name="lOI" value="${properties.dataSets.SF.parameters.poi.central.locationOfInterests}" />
			<param name="targetTime" value="${targetTime}" />
			<param name="dMax" value="${properties.dataSets.SF.parameters.dMax}" />
			<param name="durationCheckPoints" value="${durationCheckPoints}" />
		</antcall>
	</target>

	<!-- ================================= 
	          target: runtimeDurationTestSFWalking              
	         ================================= -->
	<target name="runtimeDurationTestSFWalking">
		<antcall target="runtimeDurationTestSF">
			<param name="mode" value="UNIMODAL" />
		</antcall>
	</target>

	<!-- ================================= 
		          target: runtimeDurationTestDC              
		         ================================= -->
	<target name="runtimeDurationTestDC">
		<property name="durationCheckPoints" value="${properties.dataSets.DC.parameters.durationCheckPoints}" />
		<property name="targetTime" value="${properties.dataSets.DC.parameters.arrivalDay}T${properties.dataSets.DC.parameters.arrivalTime}" />
		<property name="nOI" value="${properties.dataSets.DC.parameters.poi.central.nodeOfInterests}" />
		<property name="lOI" value="${properties.dataSets.DC.parameters.poi.central.locationOfInterests}" />
		<antcall target="runtimeDurationTest">
			<param name="dataset" value="${properties.dataSets.DC(shortName)}" />
			<param name="name" value="${properties.dataSets.DC(name)}" />
			<param name="nOI" value="${nOI}" />
			<param name="lOI" value="${lOI}" />
			<param name="targetTime" value="${targetTime}" />
			<param name="dMax" value="${properties.dataSets.DC.parameters.dMax}" />
			<param name="durationCheckPoints" value="${durationCheckPoints}" />
		</antcall>
	</target>

	<!-- ================================= 
			          target: runtimeDurationTestDetailedDC              
			         ================================= -->
	<target name="runtimeDurationTestDetailedDC">
		<property name="durationCheckPoints" value="${properties.dataSets.DC.parameters.durationCheckPoints}" />
		<property name="targetTime" value="${properties.dataSets.DC.parameters.arrivalDay}T${properties.dataSets.DC.parameters.arrivalTime}" />
		<antcall target="runtimeDurationTestDetailed">
			<param name="dataset" value="${properties.dataSets.DC(shortName)}" />
			<param name="name" value="${properties.dataSets.DC(name)}" />
			<param name="nOI" value="${properties.dataSets.DC.parameters.poi.central.nodeOfInterests}" />
			<param name="lOI" value="${properties.dataSets.DC.parameters.poi.central.locationOfInterests}" />
			<param name="targetTime" value="${targetTime}" />
			<param name="dMax" value="${properties.dataSets.DC.parameters.dMax}" />
			<param name="durationCheckPoints" value="${durationCheckPoints}" />
		</antcall>
	</target>



	<!-- ================================= 
		          target: runtimeDurationTestDCWalking              
		         ================================= -->
	<target name="runtimeDurationTestDCWalking">
		<antcall target="runtimeDurationTestDC">
			<param name="mode" value="UNIMODAL" />
		</antcall>
	</target>


	<!-- ================================= 
			          target: runtimeDurationTestST              
			         ================================= -->
	<target name="runtimeDurationTestST">
		<property name="durationCheckPoints" value="${properties.dataSets.ST.parameters.durationCheckPoints}" />
		<property name="targetTime" value="${properties.dataSets.ST.parameters.arrivalDay}T${properties.dataSets.ST.parameters.arrivalTime}" />
		<property name="nOI" value="${properties.dataSets.ST.parameters.poi.central.nodeOfInterests}" />
		<property name="lOI" value="${properties.dataSets.ST.parameters.poi.central.locationOfInterests}" />
		<antcall target="runtimeDurationTest">
			<param name="dataset" value="${properties.dataSets.ST(shortName)}" />
			<param name="name" value="${properties.dataSets.ST(name)}" />
			<param name="nOI" value="${nOI}" />
			<param name="lOI" value="${lOI}" />
			<param name="targetTime" value="${targetTime}" />
			<param name="dMax" value="${properties.dataSets.ST.parameters.dMax}" />
			<param name="durationCheckPoints" value="${durationCheckPoints}" />
		</antcall>
	</target>

	<!-- ================================= 
				          target: runtimeDurationTestDetailedST              
				         ================================= -->
	<target name="runtimeDurationTestDetailedST">
		<property name="durationCheckPoints" value="${properties.dataSets.ST.parameters.durationCheckPoints}" />
		<property name="targetTime" value="${properties.dataSets.ST.parameters.arrivalDay}T${properties.dataSets.ST.parameters.arrivalTime}" />
		<antcall target="runtimeDurationTestDetailed">
			<param name="dataset" value="${properties.dataSets.ST(shortName)}" />
			<param name="name" value="${properties.dataSets.ST(name)}" />
			<param name="nOI" value="${properties.dataSets.ST.parameters.poi.central.nodeOfInterests}" />
			<param name="lOI" value="${properties.dataSets.ST.parameters.poi.central.locationOfInterests}" />
			<param name="targetTime" value="${targetTime}" />
			<param name="dMax" value="${properties.dataSets.ST.parameters.dMax}" />
			<param name="durationCheckPoints" value="${durationCheckPoints}" />
		</antcall>
	</target>

	<!-- ================================= 
			          target: runtimeDurationTestSTWalking              
			         ================================= -->
	<target name="runtimeDurationTestSTWalking">
		<antcall target="runtimeDurationTestST">
			<param name="mode" value="UNIMODAL" />
		</antcall>
	</target>


	<!-- ================================= 
				          target: runtimeDurationTestIT              
				         ================================= -->
	<target name="runtimeDurationTestIT">
		<property name="durationCheckPoints" value="${properties.dataSets.IT.parameters.durationCheckPoints}" />
		<property name="targetTime" value="${properties.dataSets.IT.parameters.arrivalDay}T${properties.dataSets.IT.parameters.arrivalTime}" />
		<property name="nOI" value="${properties.dataSets.IT.parameters.poi.central.nodeOfInterests}" />
		<property name="lOI" value="${properties.dataSets.IT.parameters.poi.central.locationOfInterests}" />
		<antcall target="runtimeDurationTest">
			<param name="dataset" value="${properties.dataSets.IT(shortName)}" />
			<param name="name" value="${properties.dataSets.IT(name)}" />
			<param name="nOI" value="${nOI}" />
			<param name="lOI" value="${lOI}" />
			<param name="targetTime" value="${targetTime}" />
			<param name="dMax" value="${properties.dataSets.IT.parameters.dMax}" />
		</antcall>
	</target>

	<!-- ================================= 
				          target: runtimeDurationTestDetailedIT              
				         ================================= -->
	<target name="runtimeDurationTestDetailedIT">
		<property name="durationCheckPoints" value="${properties.dataSets.IT.parameters.durationCheckPoints}" />
		<property name="targetTime" value="${properties.dataSets.IT.parameters.arrivalDay}T${properties.dataSets.IT.parameters.arrivalTime}" />
		<antcall target="runtimeDurationTestDetailed">
			<param name="dataset" value="${properties.dataSets.IT(shortName)}" />
			<param name="name" value="${properties.dataSets.IT(name)}" />
			<param name="nOI" value="${properties.dataSets.IT.parameters.poi.central.nodeOfInterests}" />
			<param name="lOI" value="${properties.dataSets.IT.parameters.poi.central.locationOfInterests}" />
			<param name="targetTime" value="${targetTime}" />
			<param name="dMax" value="${properties.dataSets.IT.parameters.dMax}" />
		</antcall>
	</target>




	<!-- ================================= 
				          target: runtimeDurationTestITWalking              
				         ================================= -->
	<target name="runtimeDurationTestITWalking">
		<antcall target="runtimeDurationTestIT">
			<param name="mode" value="UNIMODAL" />
		</antcall>
	</target>


	<!-- ================================= 
				          target: runtimeExperimentsPeriferical              
				         ================================= -->
	<target name="runtimeExperimentsPeriferical" depends="runtimeDurationTestBZPeriferical,runtimeDurationTestSFPeriferical,runtimeDurationTestDCPeriferical" />


	<!-- ================================= 
					          target: runtimeDurationTestBZPeriferical              
					         ================================= -->
	<target name="runtimeDurationTestBZPeriferical">
		<antcall target="runtimeDurationTest">
			<param name="lOI" value="${properties.dataSets.BZ.parameters.poi.decentral.locationOfInterests}" />
		</antcall>
	</target>

	<!-- ================================= 
									          target: runtimeDurationTestSFPeriferical              
									         ================================= -->
	<target name="runtimeDurationTestSFPeriferical">
		<antcall target="runtimeDurationTest">
			<param name="dataset" value="${properties.dataSets.SF(shortName)}" />
			<param name="name" value="${properties.dataSets.SF(name)}" />
			<param name="lOI" value="${properties.dataSets.SF.parameters.poi.decentral.locationOfInterests}" />
			<param name="targetTime" value="${properties.dataSets.SF.parameters.arrivalDay}T${properties.dataSets.SF.parameters.arrivalTime}" />
			<param name="dMax" value="${properties.dataSets.SF.parameters.dMax}" />
		</antcall>
	</target>

	<!-- ================================= 
									          target: runtimeDurationTestDCPeriferical              
									         ================================= -->
	<target name="runtimeDurationTestDCPeriferical">
		<antcall target="runtimeDurationTest">
			<param name="dataset" value="${properties.dataSets.DC(shortName)}" />
			<param name="name" value="${properties.dataSets.DC(name)}" />
			<param name="lOI" value="${properties.dataSets.DC.parameters.poi.decentral.locationOfInterests}" />
			<param name="targetTime" value="${properties.dataSets.DC.parameters.arrivalDay}T${properties.dataSets.DC.parameters.arrivalTime}" />
			<param name="dMax" value="${properties.dataSets.DC.parameters.dMax}" />
		</antcall>
	</target>

	<!-- ================================= 
									          target: runtimeDurationTestSTPeriferical              
									         ================================= -->
	<target name="runtimeDurationTestSTPeriferical">
		<antcall target="runtimeDurationTest">
			<param name="dataset" value="${properties.dataSets.ST(shortName)}" />
			<param name="name" value="${properties.dataSets.ST(name)}" />
			<param name="lOI" value="${properties.dataSets.ST.parameters.poi.decentral.locationOfInterests}" />
			<param name="targetTime" value="${properties.dataSets.ST.parameters.arrivalDay}T${properties.dataSets.ST.parameters.arrivalTime}" />
			<param name="dMax" value="${properties.dataSets.ST.parameters.dMax}" />
		</antcall>
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: clearDiskCache                      
         - - - - - - - - - - - - - - - - - -->
	<target name="clearDiskCache" if="clearDiskCache">
		<echo message="Clearing disk cache .." />
		<exec executable="./clearDiskCache.sh" dir="${user.home}/scripts" />
	</target>


	<!-- - - - - - - - - - - - - - - - - - 
          target: runtimeDurationTest                      
         - - - - - - - - - - - - - - - - - -->
	<target name="runtimeDurationTest" depends="clearDiskCache" description="Measures the runtime in respect to the duration.">
		<!-- overide only in some special cases -->
		<property name="algorithmName" value="${properties.project.algorithm(name)}" />
		<property name="algorithmClassName" value="${properties.project.algorithm.classNames.runtimeTest.duration}" />
		<property name="testClassName" value="${properties.tests.runtimeDurationTest(className)}" />
		<property name="mode" value="${properties.tests.runtimeDurationTest.mode}" />
		<property name="appendOutput" value="false" />
		<property name="network" value="" />
		<!-- Deprecated properties -->
		<property name="frequency" value="${properties.tests.runtimeDurationTest.frequency}" />
		<property name="singleBreakpoint" value="${properties.tests.runtimeDurationTest.singleBreakpoint}" />

		<java classname="${testClassName}" classpathref="path.libraries" fork="true">
			<arg value="algorithmName=${algorithmName}" />
			<arg value="algorithmClassName=${algorithmClassName}" />
			<arg value="dbType=${properties.project.database}" />
			<arg value="dataset=${dataset}" />
			<arg value="lOI=${lOI}" />
			<arg value="nOI=${nOI}" />
			<arg value="dMax=${dMax}" />
			<arg value="targetTime=${targetTime}" />
			<arg value="speed=${properties.tests.runtimeDurationTest.speed}" />
			<arg value="mode=${mode}" />
			<arg value="outputWriting=${outputWriting}" />
			<arg value="frequency=${frequency}" />
			<arg value="network=${network}" />
			<arg value="outputFile=${outFile}" />
			<arg value="outputDir=${outDir}" />
			<arg value="durationCheckPoints=${durationCheckPoints}" />
			<arg value="singleBreakpoint=${properties.tests.runtimeDurationTest.singleBreakpoint}" />
			<arg value="useDensity=${useDensity}" />
			<arg value="densityLimit=${densityLimit}" />
			<arg value="maxMemorySize=${maxMemorySize}" />
			<arg value="appendOutput=${appendOutput}" />
			<jvmarg value="-Xmx${properties.tests(reservedMemorySize)}m" />
		</java>
	</target>

	<!-- ### Start of runtime size tests ### -->


	<!-- ================================= 
			          target: runtimeSizeExperiments_MM 
			         ================================= -->
	<target name="runtimeSizeExperiments_MM">
		<antcall target="runtimeSizeExperimentBZ" />
		<antcall target="runtimeSizeExperimentSF" />
		<antcall target="runtimeSizeExperimentST" />
		<antcall target="runtimeSizeExperimentIT" />
	</target>



	<!-- ================================= 
					          target: runtimeFixedSizeExperiments_MM              
					         ================================= -->
	<target name="runtimeFixedSizeExperiments_MM">
		<antcall target="runtimeFixedSizeTestBZ" />
		<antcall target="runtimeFixedSizeTestSF" />
		<!--antcall target="runtimeFixedSizeTestDC" /-->
		<antcall target="runtimeFixedSizeTestST" />
		<antcall target="runtimeFixedSizeTestIT" />
	</target>

	<!-- ================================= 
				          target: runtimeSizeExperiments_UM              
				         ================================= -->
	<target name="runtimeSizeExperiments_UM">
		<antcall target="runtimeSizeTestBZWalking" />
		<antcall target="runtimeSizeTestSFWalking" />
		<antcall target="runtimeSizeTestDCWalking" />
		<antcall target="runtimeSizeTestSTWalking" />
		<antcall target="runtimeSizeTestITWalking" />
	</target>

	<!-- ================================= 
						          target: runtimeSizeExperimentBZ             
						         ================================= -->
	<target name="runtimeSizeExperimentBZ" description="description">
		<antcall target="runtimeSizeExperiment">
			<param name="dataset" value="${properties.dataSets.BZ(shortName)}" />
			<param name="name" value="${properties.dataSets.BZ(name)}" />
			<param name="dMax" value="${properties.dataSets.BZ.parameters.dMax}" />
			<param name="targetDay" value="${properties.dataSets.BZ.parameters.arrivalDay}" />
			<param name="targetTime" value="${properties.dataSets.BZ.parameters.arrivalTime}" />
			<param name="nOI" value="${properties.dataSets.BZ.parameters.poi.central.nodeOfInterests}" />
			<param name="sizeCheckPoints" value="${properties.dataSets.BZ.parameters.sizeCheckPoints.size}" />
			<param name="runs" value="50" />
		</antcall>
	</target>

	<!-- ================================= 
					          target: runtimeSizeExperimentSF              
					         ================================= -->
	<target name="runtimeSizeExperimentSF" description="description">
		<antcall target="runtimeSizeExperiment">
			<param name="dataset" value="${properties.dataSets.SF(shortName)}" />
			<param name="name" value="${properties.dataSets.SF(name)}" />
			<param name="dMax" value="${properties.dataSets.SF.parameters.dMax}" />
			<param name="targetDay" value="${properties.dataSets.SF.parameters.arrivalDay}" />
			<param name="targetTime" value="${properties.dataSets.SF.parameters.arrivalTime}" />
			<param name="nOI" value="${properties.dataSets.SF.parameters.poi.central.nodeOfInterests}" />
			<param name="sizeCheckPoints" value="${properties.dataSets.SF.parameters.sizeCheckPoints.size}" />
			<param name="runs" value="50" />
		</antcall>
	</target>

	<!-- ================================= 
				          target: runtimeSizeExperimentST              
				         ================================= -->
	<target name="runtimeSizeExperimentST" description="description">
		<antcall target="runtimeSizeExperiment">
			<param name="dataset" value="${properties.dataSets.ST(shortName)}" />
			<param name="name" value="${properties.dataSets.ST(name)}" />
			<param name="dMax" value="${properties.dataSets.ST.parameters.dMax}" />
			<param name="targetDay" value="${properties.dataSets.ST.parameters.arrivalDay}" />
			<param name="targetTime" value="${properties.dataSets.ST.parameters.arrivalTime}" />
			<param name="nOI" value="${properties.dataSets.ST.parameters.poi.central.nodeOfInterests}" />
			<param name="sizeCheckPoints" value="${properties.dataSets.ST.parameters.sizeCheckPoints.size}" />
			<param name="runs" value="50" />
		</antcall>
	</target>

	<!-- ================================= 
					          target: runtimeSizeExperimentIT              
					         ================================= -->
	<target name="runtimeSizeExperimentIT" description="description">
		<antcall target="runtimeSizeExperiment">
			<param name="dataset" value="${properties.dataSets.IT(shortName)}" />
			<param name="name" value="${properties.dataSets.IT(name)}" />
			<param name="dMax" value="${properties.dataSets.IT.parameters.dMax}" />
			<param name="targetDay" value="${properties.dataSets.IT.parameters.arrivalDay}" />
			<param name="targetTime" value="${properties.dataSets.IT.parameters.arrivalTime}" />
			<param name="nOI" value="${properties.dataSets.IT.parameters.poi.central.nodeOfInterests}" />
			<param name="sizeCheckPoints" value="${properties.dataSets.IT.parameters.sizeCheckPoints.size}" />
			<param name="runs" value="10" />
		</antcall>
	</target>


	<!-- ================================= 
					          target: runtimeSizeTestBZ              
					         ================================= -->
	<target name="runtimeSizeTestBZ">
		<property name="sizeCheckPoints" value="${properties.dataSets.BZ.parameters.sizeCheckPoints.size}" />
		<propertyregex property="durationCheckPoints" input="${properties.dataSets.BZ.parameters.sizeCheckPoints.duration}" regexp="^[0-9]{1,3}" select="${properties.dataSets.BZ.parameters.sizeCheckPoints.duration}" defaultValue="SetMe" global="true" />
		<property name="dMax" value="${properties.dataSets.BZ.parameters.sizeCheckPoints(dMax)}" />
		<antcall target="runtimeSizeTest">
			<param name="dataset" value="${properties.dataSets.BZ(shortName)}" />
			<param name="name" value="${properties.dataSets.BZ(name)}" />
			<param name="nOI" value="${properties.dataSets.BZ.parameters.poi.central.nodeOfInterests}" />
			<param name="lOI" value="${properties.dataSets.BZ.parameters.poi.central.locationOfInterests}" />
			<param name="targetTime" value="${properties.dataSets.BZ.parameters.arrivalDay}T${properties.dataSets.BZ.parameters.arrivalTime}" />
			<param name="dMax" value="${dMax}" />
			<param name="sizeCheckPoints" value="${sizeCheckPoints}" />
			<param name="durationCheckPoints" value="${durationCheckPoints}" />
			<param name="frequency" value="50" />
		</antcall>
	</target>

	<!-- ================================= 
						          target: runtimeFixedSizeTestBZ              
						         ================================= -->
	<target name="runtimeFixedSizeTestBZ" description="description">
		<antcall target="runtimeSizeTestBZ">
			<param name="sizeCheckPoints" value="${properties.dataSets.BZ.parameters.fixedSize(size)}" />
			<param name="durationCheckPoints" value="${properties.dataSets.BZ.parameters.fixedSize(duration)}" />
			<param name="suffix" value="runtime_fixed_size" />
		</antcall>
	</target>


	<!-- ================================= 
						          target: runtimeSizeTestBZWalking              
						         ================================= -->
	<target name="runtimeSizeTestBZWalking">
		<antcall target="runtimeSizeTestBZ">
			<param name="mode" value="UNIMODAL" />
		</antcall>
	</target>

	<!-- ================================= 
						          target: runtimeSizeTestSF              
						         ================================= -->
	<target name="runtimeSizeTestSF">
		<property name="sizeCheckPoints" value="${properties.dataSets.SF.parameters.sizeCheckPoints.size}" />
		<propertyregex property="durationCheckPoints" input="${properties.dataSets.SF.parameters.sizeCheckPoints.duration}" regexp="^[0-9]{1,3}" select="${properties.dataSets.SF.parameters.sizeCheckPoints.duration}" defaultValue="SetMe" global="true" />
		<property name="dMax" value="${properties.dataSets.SF.parameters.sizeCheckPoints(dMax)}" />
		<antcall target="runtimeSizeTest">
			<param name="dataset" value="${properties.dataSets.SF(shortName)}" />
			<param name="name" value="${properties.dataSets.SF(name)}" />
			<param name="nOI" value="${properties.dataSets.SF.parameters.poi.central.nodeOfInterests}" />
			<param name="lOI" value="${properties.dataSets.SF.parameters.poi.central.locationOfInterests}" />
			<param name="targetTime" value="${properties.dataSets.SF.parameters.arrivalDay}T${properties.dataSets.SF.parameters.arrivalTime}" />
			<param name="dMax" value="${dMax}" />
			<param name="queryPointsTable" value="${properties.dataSets.SF.queryPointsTable}" />
			<param name="sizeCheckPoints" value="${sizeCheckPoints}" />
			<param name="durationCheckPoints" value="${durationCheckPoints}" />
		</antcall>
	</target>

	<!-- ================================= 
						          target: runtimeFixedSizeTestSF              
						         ================================= -->
	<target name="runtimeFixedSizeTestSF" description="description">
		<antcall target="runtimeSizeTestSF">
			<param name="sizeCheckPoints" value="${properties.dataSets.SF.parameters.fixedSize(size)}" />
			<param name="durationCheckPoints" value="${properties.dataSets.SF.parameters.fixedSize(duration)}" />
			<param name="suffix" value="runtime_fixed_size" />
		</antcall>
	</target>

	<!-- ================================= 
							          target: runtimeSizeTestSFWalking              
							         ================================= -->
	<target name="runtimeSizeTestSFWalking">
		<antcall target="runtimeSizeTestSF">
			<param name="mode" value="UNIMODAL" />
			<param name="snapSize" value="${properties.dataSets.SF.snapSize(unimodal)}" />
		</antcall>
	</target>

	<!-- ================================= 
						          target: runtimeSizeTestDC              
						         ================================= -->
	<target name="runtimeSizeTestDC">
		<property name="sizeCheckPoints" value="${properties.dataSets.DC.parameters.sizeCheckPoints.size}" />
		<propertyregex property="durationCheckPoints" input="${properties.dataSets.DC.parameters.sizeCheckPoints.duration}" regexp="^[0-9]{1,3}" select="${properties.dataSets.DC.parameters.sizeCheckPoints.duration}" defaultValue="SetMe" global="true" />
		<property name="dMax" value="${properties.dataSets.DC.parameters.sizeCheckPoints(dMax)}" />
		<antcall target="runtimeSizeTest">
			<param name="dataset" value="${properties.dataSets.DC(shortName)}" />
			<param name="name" value="${properties.dataSets.DC(name)}" />
			<param name="nOI" value="${properties.dataSets.DC.parameters.poi.central.nodeOfInterests}" />
			<param name="lOI" value="${properties.dataSets.DC.parameters.poi.central.locationOfInterests}" />
			<param name="targetTime" value="${properties.dataSets.DC.parameters.arrivalDay}T${properties.dataSets.DC.parameters.arrivalTime}" />
			<param name="dMax" value="${dMax}" />
			<param name="queryPointsTable" value="${properties.dataSets.DC.queryPointsTable}" />
			<param name="sizeCheckPoints" value="${sizeCheckPoints}" />
			<param name="durationCheckPoints" value="${durationCheckPoints}" />
		</antcall>
	</target>

	<!-- ================================= 
						          target: runtimeFixedSizeTestDC              
						         ================================= -->
	<target name="runtimeFixedSizeTestDC" description="description">
		<antcall target="runtimeSizeTestDC">
			<param name="sizeCheckPoints" value="${properties.dataSets.DC.parameters.fixedSize(size)}" />
			<param name="durationCheckPoints" value="${properties.dataSets.DC.parameters.fixedSize(duration)}" />
			<param name="suffix" value="runtime_fixed_size" />
		</antcall>
	</target>

	<!-- ================================= 
							          target: runtimeSizeTestDCWalking              
							         ================================= -->
	<target name="runtimeSizeTestDCWalking">
		<antcall target="runtimeSizeTestDC">
			<param name="mode" value="UNIMODAL" />
			<param name="snapSize" value="${properties.dataSets.DC.snapSize(unimodal)}" />
		</antcall>
	</target>

	<!-- ================================= 
								          target: runtimeSizeTestST              
								         ================================= -->
	<target name="runtimeSizeTestST">
		<property name="sizeCheckPoints" value="${properties.dataSets.ST.parameters.sizeCheckPoints.size}" />
		<propertyregex property="durationCheckPoints" input="${properties.dataSets.ST.parameters.sizeCheckPoints.duration}" regexp="^[0-9]{1,3}" select="${properties.dataSets.ST.parameters.sizeCheckPoints.duration}" defaultValue="SetMe" global="true" />
		<property name="dMax" value="${properties.dataSets.ST.parameters.sizeCheckPoints(dMax)}" />
		<antcall target="runtimeSizeTest">
			<param name="dataset" value="${properties.dataSets.ST(shortName)}" />
			<param name="name" value="${properties.dataSets.ST(name)}" />
			<param name="nOI" value="${properties.dataSets.ST.parameters.poi.central.nodeOfInterests}" />
			<param name="lOI" value="${properties.dataSets.ST.parameters.poi.central.locationOfInterests}" />
			<param name="targetTime" value="${properties.dataSets.ST.parameters.arrivalDay}T${properties.dataSets.ST.parameters.arrivalTime}" />
			<param name="dMax" value="${dMax}" />
			<param name="queryPointsTable" value="${properties.dataSets.ST.queryPointsTable}" />
			<param name="sizeCheckPoints" value="${sizeCheckPoints}" />
			<param name="durationCheckPoints" value="${durationCheckPoints}" />
		</antcall>
	</target>

	<!-- ================================= 
						          target: runtimeFixedSizeTestST              
						         ================================= -->
	<target name="runtimeFixedSizeTestST" description="description">
		<antcall target="runtimeSizeTestST">
			<param name="sizeCheckPoints" value="${properties.dataSets.ST.parameters.fixedSize(size)}" />
			<param name="durationCheckPoints" value="${properties.dataSets.ST.parameters.fixedSize(duration)}" />
			<param name="suffix" value="runtime_fixed_size" />
		</antcall>
	</target>

	<!-- ================================= 
								          target: runtimeSizeTestSTWalking              
								         ================================= -->
	<target name="runtimeSizeTestSTWalking">
		<antcall target="runtimeSizeTestST">
			<param name="mode" value="UNIMODAL" />
			<param name="snapSize" value="${properties.dataSets.ST.snapSize(unimodal)}" />
		</antcall>
	</target>


	<!-- ================================= 
									          target: runtimeSizeTestIT              
									         ================================= -->
	<target name="runtimeSizeTestIT">
		<property name="sizeCheckPoints" value="${properties.dataSets.IT.parameters.sizeCheckPoints.size}" />
		<propertyregex property="durationCheckPoints" input="${properties.dataSets.IT.parameters.sizeCheckPoints.duration}" regexp="^[0-9]{1,3}" select="${properties.dataSets.IT.parameters.sizeCheckPoints.duration}" defaultValue="SetMe" global="true" />
		<property name="dMax" value="${properties.dataSets.IT.parameters.sizeCheckPoints(dMax)}" />
		<antcall target="runtimeSizeTest">
			<param name="dataset" value="${properties.dataSets.IT(shortName)}" />
			<param name="name" value="${properties.dataSets.IT(name)}" />
			<param name="nOI" value="${properties.dataSets.IT.parameters.poi.central.nodeOfInterests}" />
			<param name="lOI" value="${properties.dataSets.IT.parameters.poi.central.locationOfInterests}" />
			<param name="targetTime" value="${properties.dataSets.IT.parameters.arrivalDay}T${properties.dataSets.IT.parameters.arrivalTime}" />
			<param name="dMax" value="${dMax}" />
			<param name="queryPointsTable" value="${properties.dataSets.IT.queryPointsTable}" />
			<param name="sizeCheckPoints" value="${sizeCheckPoints}" />
			<param name="durationCheckPoints" value="${durationCheckPoints}" />
		</antcall>
	</target>

	<!-- ================================= 
							          target: runtimeFixedSizeTestIT              
							         ================================= -->
	<target name="runtimeFixedSizeTestIT" description="description">
		<antcall target="runtimeSizeTestIT">
			<param name="sizeCheckPoints" value="${properties.dataSets.IT.parameters.fixedSize(size)}" />
			<param name="durationCheckPoints" value="${properties.dataSets.IT.parameters.fixedSize(duration)}" />
			<param name="suffix" value="runtime_fixed_size" />
		</antcall>
	</target>

	<!-- ================================= 
									          target: runtimeSizeTestITWalking              
									         ================================= -->
	<target name="runtimeSizeTestITWalking">
		<antcall target="runtimeSizeTestIT">
			<param name="mode" value="UNIMODAL" />
			<param name="snapSize" value="${properties.dataSets.IT.snapSize(unimodal)}" />
		</antcall>
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
			          target: runtimeSizeTest           
			         - - - - - - - - - - - - - - - - - -->
	<target name="runtimeSizeTest" depends="clearDiskCache" description="Measures the runtime in respect to the node size of the isochrone">
		<!-- overide only in some special cases -->
		<property name="algorithmName" value="${properties.project.algorithm(name)}" />
		<property name="algorithmClassName" value="${properties.project.algorithm.classNames.runtimeTest.size}" />
		<property name="testClassName" value="${properties.tests.runtimeSizeTest(className)}" />
		<property name="frequency" value="1" />
		<property name="mode" value="${properties.tests.runtimeSizeTest.mode}" />
		<property name="appendOutput" value="false" />
		<property name="network" value="" />
		<!-- Deprecated properties -->
		<property name="frequency" value="${properties.tests.runtimeDurationTest.frequency}" />
		<property name="singleBreakpoint" value="${properties.tests.runtimeDurationTest.singleBreakpoint}" />

		<java classname="${testClassName}" classpathref="path.libraries" fork="true">
			<arg value="algorithmName=${algorithmName}" />
			<arg value="algorithmClassName=${algorithmClassName}" />
			<arg value="dbType=${properties.project.database}" />
			<arg value="dataset=${dataset}" />
			<arg value="lOI=${lOI}" />
			<arg value="nOI=${nOI}" />
			<arg value="dMax=${dMax}" />
			<arg value="targetTime=${targetTime}" />
			<arg value="speed=${properties.tests.runtimeSizeTest.speed}" />
			<arg value="mode=${mode}" />
			<arg value="outputWriting=${outputWriting}" />
			<arg value="frequency=${frequency}" />
			<arg value="network=${network}" />
			<arg value="outputFile=${outFile}" />
			<arg value="outputDir=${outDir}" />
			<arg value="durationCheckPoints=${durationCheckPoints}" />
			<arg value="sizeCheckPoints=${sizeCheckPoints}" />
			<arg value="singleBreakpoint=${properties.tests.runtimeSizeTest.singleBreakpoint}" />
			<arg value="useDensity=${useDensity}" />
			<arg value="densityLimit=${densityLimit}" />
			<arg value="appendOutput=${appendOutput}" />
			<jvmarg value="-Xmx${properties.tests(reservedMemorySize)}m" />
		</java>
	</target>

	<target name="runtimeSizeExperiment" description="@override {dataset,name,dMax,targetTime,checkPoints optional: {runs,singleBreakpoint,clearDiskCache}">
		<property name="runs" value="20" />
		<property name="singleBreakpoint" value="false" />
		<property name="visibleColumns" value="3,4" />

		<!-- mutual properties -->
		<property name="algorithmName" value="${properties.project.algorithm(name)}" />
		<property name="mode" value="${properties.tests.runtimeSizeTest.mode}" />
		<property name="dataset" value="${properties.dataSets.BZ(shortName)}" />
		<property name="name" value="${properties.dataSets.BZ(name)}" />
		<property name="dMax" value="${properties.dataSets.BZ.parameters.dMax}" />
		<property name="sizeCheckPoints" value="${properties.dataSets.BZ.parameters.sizeCheckPoints.size}" />
		<property name="targetDay" value="${properties.dataSets.BZ.parameters.arrivalDay}" />
		<property name="targetTime" value="${properties.dataSets.BZ.parameters.arrivalTime}" />
		<property name="nOI" value="${properties.dataSets.BZ.parameters.poi.central.nodeOfInterests}" />

		<property name="outDir" value="out" />
		<property name="fileSuffix" value="csv" />

		<!-- some conditions for the file -->
		<condition property="prefix" value="${algorithmName}_${dataset}_${mode}_${lOI}_${targetTime}_runtime_size">
			<not>
				<isset property="nOI" />
			</not>
		</condition>
		<!-- only if property ${nOI} is not set -->
		<property name="prefix" value="${algorithmName}_${dataset}_${mode}_${nOI}_${targetTime}_runtime_size" />

		<!-- append density identifier if property densityLimit is not set -->
		<condition property="outfilePrefix" value="${prefix}_DL${densityLimit}">
			<isset property="densityLimit" />
		</condition>
		<property name="outfilePrefix" value="${prefix}" />
		<property name="network" value="" />

		<echo message="Outfile path is: ${basedir}/${outDir}/${outfilePrefix}.${fileSuffix}" />

		<var name="appendOutput" value="false" />
		<for begin="1" end="${runs}" param="iter" step="1">
			<sequential>
				<echo>Iteration @{iter} of ${runs}. Append output: ${appendOutput} </echo>
				<if>
					<equals arg1="${singleBreakpoint}" arg2="true" />
					<then>
						<var name="cnt1" value="1" />
						<var name="incrementOp" value="+" />

						<var name="durationCheckPoint" value="" />

						<for list="${sizeCheckPoints}" param="sizeCheckPoint" delimiter=",">
							<sequential>
								<var name="cnt2" value="1" />
								<!-- we iterate over the durations to identify the correct value to be passed -->
								<for list="${durationCheckPoints}" param="dCheckPoint" delimiter=",">
									<sequential>
										<if>
											<equals arg1="${cnt1}" arg2="${cnt2}" />
											<then>
												<echo>Set duration checkpoint to: @{dCheckPoint}</echo>
												<var name="durationCheckPoint" value="@{dCheckPoint}" />
											</then>
										</if>
										<math result="result" operand1="${cnt2}" operation="+" operand2="1" datatype="int" />
										<var name="cnt2" value="${result}" />
									</sequential>
								</for>

								<antcall target="runtimeSizeTest">
									<param name="appendOutput" value="${appendOutput}" />
									<param name="dataset" value="${dataset}" />
									<param name="name" value="${name}" />
									<param name="nOI" value="${nOI}" />
									<param name="targetTime" value="${targetDay}T${targetTime}" />
									<param name="dMax" value="${dMax}" />
									<param name="sizeCheckPoints" value="@{sizeCheckPoint}" />
									<param name="durationCheckPoints" value="${durationCheckPoint}" />
									<param name="outFile" value="${outfilePrefix}.${fileSuffix}" />
									<param name="outDir" value="${outDir}" />
								</antcall>
								<var name="appendOutput" value="true" />
								<math result="result" operand1="${cnt1}" operation="+" operand2="1" datatype="int" />
								<var name="cnt1" value="${result}" />
							</sequential>
						</for>
					</then>
					<else>
						<antcall target="runtimeSizeTest">
							<param name="appendOutput" value="${appendOutput}" />
							<param name="dataset" value="${dataset}" />
							<param name="name" value="${name}" />
							<param name="nOI" value="${nOI}" />
							<param name="targetTime" value="${targetDay}T${targetTime}" />
							<param name="dMax" value="${dMax}" />
							<param name="sizeCheckPoints" value="${sizeCheckPoints}" />
							<param name="outFile" value="${outfilePrefix}.${fileSuffix}" />
							<param name="outDir" value="${outDir}" />
						</antcall>
					</else>
				</if>
				<var name="appendOutput" value="true" />
			</sequential>
		</for>

		<tstamp>
			<format property="touch.time" pattern="yyyyMMdd_hh:mm" />
		</tstamp>
		<copy file="${outDir}/${outfilePrefix}_avg.csv" tofile="${outDir}/${outfilePrefix}_avg_${touch.time}.csv" failonerror="false" />
		<avg fileIn="${basedir}/${outDir}/${outfilePrefix}.csv" fileOut="${basedir}/${outDir}/${outfilePrefix}_avg.csv" columnIndex="2" visibleColumns="${visibleColumns}" />
		<echo message="Runtime size experiment has been written into the file ${basedir}/${outDir}/${outfilePrefix}_avg.csv" />
	</target>


	<!-- ######## Memory tests part ######## -->

	<!-- ### Start of memory duration tests ### -->

	<!-- ================================= 
			          target: runMemoryDurationExperiments_MM              
			         ================================= -->
	<target name="runMemoryDurationExperiments_MM">
		<antcall target="runMemoryDurationTestBZ" />
		<antcall target="runMemoryDurationTestSF" />
		<antcall target="runMemoryDurationTestDC" />
		<antcall target="runMemoryDurationTestST" />
		<antcall target="runMemoryDurationTestIT" />
	</target>

	<!-- ================================= 
				          target: runMemoryDurationExperiments_UM              
				         ================================= -->
	<target name="runMemoryDurationExperiments_UM">
		<antcall target="runMemoryDurationTestBZWalking" />
		<antcall target="runMemoryDurationTestSFWalking" />
		<antcall target="runMemoryDurationTestDCWalking" />
		<antcall target="runMemoryDurationTestSTWalking" />
		<antcall target="runMemoryDurationTestITWalking" />
	</target>

	<!-- ================================= 
	          target: runMemoryDurationTestBZ              
	         ================================= -->
	<target name="runMemoryDurationTestBZ" description="description">
		<property name="dpChk" value="${properties.dataSets.BZ.parameters.durationCheckPoints}" />
		<propertyregex property="durationCheckPoints" input="${dpChk}" regexp="^[0-9]{1,3}" select="${dpChk}" defaultValue="SetMe" global="true" />
		<antcall target="memoryDurationTest">
			<param name="dataset" value="${properties.dataSets.BZ(shortName)}" />
			<param name="name" value="${properties.dataSets.BZ(name)}" />
			<param name="nOI" value="${properties.dataSets.BZ.parameters.poi.central.nodeOfInterests}" />
			<param name="lOI" value="${properties.dataSets.BZ.parameters.poi.central.locationOfInterests}" />
			<param name="targetTime" value="${properties.dataSets.BZ.parameters.arrivalTime}" />
			<param name="targetDay" value="${properties.dataSets.BZ.parameters.arrivalTime}" />
			<param name="dMax" value="${properties.dataSets.BZ.parameters.dMax}" />
			<param name="durationCheckPoints" value="${durationCheckPoints}" />
		</antcall>
	</target>

	<!-- ================================= 
		          target: runMemoryDurationTestBZWalking              
		         ================================= -->
	<target name="runMemoryDurationTestBZWalking" description="description">
		<antcall target="runMemoryDurationTestBZ">
			<param name="mode" value="UNIMODAL" />
		</antcall>
	</target>

	<!-- ================================= 
	          target: runMemoryDurationTestSF              
	         ================================= -->
	<target name="runMemoryDurationTestSF" description="description">
		<property name="dpChk" value="${properties.dataSets.SF.parameters.durationCheckPoints}" />
		<propertyregex property="durationCheckPoints" input="${dpChk}" regexp="^[0-9]{1,3}" select="${dpChk}" defaultValue="SetMe" global="true" />
		<antcall target="memoryDurationTest">
			<param name="dataset" value="${properties.dataSets.SF(shortName)}" />
			<param name="name" value="${properties.dataSets.SF(name)}" />
			<param name="nOI" value="${properties.dataSets.SF.parameters.poi.central.nodeOfInterests}" />
			<param name="lOI" value="${properties.dataSets.SF.parameters.poi.central.locationOfInterests}" />
			<param name="targetDay" value="${properties.dataSets.SF.parameters.arrivalDay}" />
			<param name="targetTime" value="${properties.dataSets.SF.parameters.arrivalTime}" />
			<param name="dMax" value="${properties.dataSets.SF.parameters.dMax}" />
			<param name="durationCheckPoints" value="${durationCheckPoints}" />
		</antcall>
	</target>

	<!-- ================================= 
		          target: runMemoryDurationTestSFWalking              
		         ================================= -->
	<target name="runMemoryDurationTestSFWalking" description="description">
		<antcall target="runMemoryDurationTestSF">
			<param name="mode" value="UNIMODAL" />
		</antcall>
	</target>

	<!-- ================================= 
				          target: runMemoryDurationTestDC              
				         ================================= -->
	<target name="runMemoryDurationTestDC" description="description">
		<property name="dpChk" value="${properties.dataSets.DC.parameters.durationCheckPoints}" />
		<propertyregex property="durationCheckPoints" input="${dpChk}" regexp="^[0-9]{1,3}" select="${dpChk}" defaultValue="SetMe" global="true" />
		<antcall target="memoryDurationTest">
			<param name="dataset" value="${properties.dataSets.DC(shortName)}" />
			<param name="name" value="${properties.dataSets.DC(name)}" />
			<param name="nOI" value="${properties.dataSets.DC.parameters.poi.central.nodeOfInterests}" />
			<param name="lOI" value="${properties.dataSets.DC.parameters.poi.central.locationOfInterests}" />
			<param name="targetDay" value="${properties.dataSets.DC.parameters.arrivalDay}" />
			<param name="targetTime" value="${properties.dataSets.DC.parameters.arrivalTime}" />
			<param name="dMax" value="${properties.dataSets.DC.parameters.dMax}" />
			<param name="durationCheckPoints" value="${durationCheckPoints}" />
		</antcall>
	</target>

	<!-- ================================= 
				          target: runMemoryDurationTestDCWalking              
				         ================================= -->
	<target name="runMemoryDurationTestDCWalking" description="description">
		<antcall target="runMemoryDurationTestDC">
			<param name="mode" value="UNIMODAL" />
		</antcall>
	</target>

	<!-- ================================= 
		          target: runMemoryDurationTestST              
		         ================================= -->
	<target name="runMemoryDurationTestST" description="description">
		<property name="dpChk" value="${properties.dataSets.ST.parameters.durationCheckPoints}" />
		<propertyregex property="durationCheckPoints" input="${dpChk}" regexp="^[0-9]{1,3}" select="${dpChk}" defaultValue="SetMe" global="true" />
		<antcall target="memoryDurationTest">
			<param name="dataset" value="${properties.dataSets.ST(shortName)}" />
			<param name="name" value="${properties.dataSets.ST(name)}" />
			<param name="nOI" value="${properties.dataSets.ST.parameters.poi.central.nodeOfInterests}" />
			<param name="lOI" value="${properties.dataSets.ST.parameters.poi.central.locationOfInterests}" />
			<param name="targetDay" value="${properties.dataSets.ST.parameters.arrivalDay}" />
			<param name="targetTime" value="${properties.dataSets.ST.parameters.arrivalTime}" />
			<param name="dMax" value="${properties.dataSets.ST.parameters.dMax}" />
			<param name="durationCheckPoints" value="${durationCheckPoints}" />
		</antcall>
	</target>

	<!-- ================================= 
					          target: runMemoryDurationTestSTWalking              
					         ================================= -->
	<target name="runMemoryDurationTestSTWalking" description="description">
		<antcall target="runMemoryDurationTestST">
			<param name="mode" value="UNIMODAL" />
		</antcall>
	</target>

	<!-- ================================= 
				          target: runMemoryDurationTestIT              
				         ================================= -->
	<target name="runMemoryDurationTestIT" description="description">
		<property name="dpChk" value="${properties.dataSets.IT.parameters.durationCheckPoints}" />
		<propertyregex property="durationCheckPoints" input="${dpChk}" regexp="^[0-9]{1,3}" select="${dpChk}" defaultValue="SetMe" global="true" />
		<antcall target="memoryDurationTest">
			<param name="dataset" value="${properties.dataSets.IT(shortName)}" />
			<param name="name" value="${properties.dataSets.IT(name)}" />
			<param name="nOI" value="${properties.dataSets.IT.parameters.poi.central.nodeOfInterests}" />
			<param name="lOI" value="${properties.dataSets.IT.parameters.poi.central.locationOfInterests}" />
			<param name="targetDay" value="${properties.dataSets.IT.parameters.arrivalDay}" />
			<param name="targetTime" value="${properties.dataSets.IT.parameters.arrivalTime}" />
			<param name="dMax" value="${properties.dataSets.IT.parameters.dMax}" />
			<param name="durationCheckPoints" value="${durationCheckPoints}" />
		</antcall>
	</target>

	<!-- ================================= 
							          target: runMemoryDurationTestITWalking              
							         ================================= -->
	<target name="runMemoryDurationTestITWalking" description="description">
		<antcall target="runMemoryDurationTestIT">
			<param name="mode" value="UNIMODAL" />
		</antcall>
	</target>


	<!-- - - - - - - - - - - - - - - - - - 
		          target: memoryDurationTest                      
		         - - - - - - - - - - - - - - - - - -->
	<target name="memoryDurationTest" description="Measures the memory in respect to the duration">
		<!-- default parameters, can be overwritten -->
		<property name="dataset" value="${properties.dataSets.BZ(shortName)}" />
		<property name="name" value="${properties.dataSets.BZ(name)}" />
		<property name="lOI" value="SetMe" />
		<property name="algorithmName" value="${properties.project.algorithm(name)}" />
		<property name="algorithmClassName" value="${properties.project.algorithm.classNames.memoryTest.duration}" />
		<!-- overide only in some special cases -->
		<property name="mode" value="${properties.tests.memoryDurationTest.mode}" />
		<property name="useDensity" value="SetMe" />
		<property name="densityLimit" value="SetMe" />

		<property name="nOI" value="SetMe" />
		<if>
			<equals arg1="${nOI}" arg2="SetMe" />
			<then>
				<property name="outputFile" value="${algorithmName}_${dataset}_${mode}_${lOI}_${targetTime}_memory_duration.csv" />
			</then>
			<else>
				<property name="outputFile" value="${algorithmName}_${dataset}_${mode}_${nOI}_${targetTime}_memory_duration.csv" />
			</else>
		</if>

		<property name="durationCheckPoints" value="SetMe" />
		<if>
			<equals arg1="${durationCheckPoints}" arg2="SetMe" />
			<then>
				<property name="checkPts" value="${dMax}" />
			</then>
			<else>
				<property name="checkPts" value="${durationCheckPoints}" />
			</else>
		</if>

		<property name="outputWriting" value="${properties.tests.memoryDurationTest.outputWriting}" />
		<property name="network" value="" />
		<property name="snapSize" value="${properties.dataSets.BZ.snapSize}" />
		<property name="speed" value="${properties.tests.memoryDurationTest.speed}" />

		<echo message="Starting the memory-duration tests for isochrones for ${name}" />
		<java classname="${properties.tests.memoryDurationTest(className)}" classpathref="path.libraries" fork="true">
			<arg value="dbType=${properties.project.database}" />
			<arg value="algorithmName=${algorithmName}" />
			<arg value="algorithmClassName=${algorithmClassName}" />
			<arg value="dataset=${dataset}" />
			<arg value="nOI=${nOI}" />
			<arg value="lOI=${lOI}" />
			<arg value="dMax=${dMax}" />
			<arg value="targetTime=${targetDay}T${targetTime}" />
			<arg value="speed=${speed}" />
			<arg value="mode=${mode}" />
			<arg value="outputWriting=${outputWriting}" />
			<arg value="outputFile=${outputFile}" />
			<arg value="durationCheckPoints=${checkPts}" />
			<arg value="singleBreakpoint=${properties.tests.memoryDurationTest.singleBreakpoint}" />
			<arg value="useDensity=${useDensity}" />
			<arg value="densityLimit=${densityLimit}" />
			<jvmarg value="-Xmx${properties.tests(reservedMemorySize)}m" />
		</java>
	</target>


	<!-- ### Start of memory size tests ### -->

	<!-- ================================= 
						          target: runMemorySizeExperiments_MM              
						         ================================= -->
	<target name="runMemorySizeExperiments_MM">
		<antcall target="runMemorySizeTestBZ" />
		<antcall target="runMemorySizeTestSF" />
		<antcall target="runMemorySizeTestDC" />
		<antcall target="runMemorySizeTestST" />
		<antcall target="runMemorySizeTestIT" />
	</target>

	<!-- ================================= 
						          target: runMemorySizeExperiments_UM              
						         ================================= -->
	<target name="runMemorySizeExperiments_UM">
		<antcall target="runMemorySizeTestBZWalking" />
		<antcall target="runMemorySizeTestSFWalking" />
		<antcall target="runMemorySizeTestDCWalking" />
		<antcall target="runMemorySizeTestSTWalking" />
		<antcall target="runMemorySizeTestITWalking" />
	</target>

	<!-- ================================= 
			          target: runMemorySizeTestBZ              
			         ================================= -->
	<target name="runMemorySizeTestBZ" description="description">
		<property name="dpChk" value="${properties.dataSets.BZ.parameters.sizeCheckPoints.duration}" />
		<propertyregex property="durationCheckPoints" input="${dpChk}" regexp="^[0-9]{1,3}" select="${dpChk}" defaultValue="SetMe" global="true" />
		<property name="sizeCheckPoints" value="${properties.dataSets.BZ.parameters.sizeCheckPoints.size}" />
		<property name="mode" value="MULTIMODAL" />
		<antcall target="memorySizeTest">
			<param name="mode" value="${mode}" />
			<param name="dataset" value="${properties.dataSets.BZ(shortName)}" />
			<param name="name" value="${properties.dataSets.BZ(name)}" />
			<param name="nOI" value="${properties.dataSets.BZ.parameters.poi.central.nodeOfInterests}" />
			<param name="lOI" value="${properties.dataSets.BZ.parameters.poi.central.locationOfInterests}" />
			<param name="targetDay" value="${properties.dataSets.BZ.parameters.arrivalDay}" />
			<param name="targetTime" value="${properties.dataSets.BZ.parameters.arrivalTime}" />
			<param name="dMax" value="${properties.dataSets.BZ.parameters.dMax}" />
			<param name="sizeCheckPoints" value="${sizeCheckPoints}" />
			<param name="durationCheckPoints" value="${durationCheckPoints}" />
		</antcall>
	</target>


	<!-- ================================= 
		          target: runMemorySizeTestBZWalking              
		         ================================= -->
	<target name="runMemorySizeTestBZWalking" description="description">
		<antcall target="runMemorySizeTestBZ">
			<param name="mode" value="UNIMODAL" />
			<param name="snapSize" value="${properties.dataSets.BZ.snapSize(unimodal)}" />
		</antcall>
	</target>

	<!-- ================================= 
	          target: runMemorySizeTestSF              
	         ================================= -->
	<target name="runMemorySizeTestSF" description="description">
		<property name="dpChk" value="${properties.dataSets.SF.parameters.sizeCheckPoints.duration}" />
		<propertyregex property="durationCheckPoints" input="${dpChk}" regexp="^[0-9]{1,3}" select="${dpChk}" defaultValue="SetMe" global="true" />
		<property name="sizeCheckPoints" value="${properties.dataSets.SF.parameters.sizeCheckPoints.size}" />
		<property name="mode" value="MULTIMODAL" />
		<antcall target="memorySizeTest">
			<param name="mode" value="${mode}" />
			<param name="dataset" value="${properties.dataSets.SF(shortName)}" />
			<param name="name" value="${properties.dataSets.SF(name)}" />
			<param name="nOI" value="${properties.dataSets.SF.parameters.poi.central.nodeOfInterests}" />
			<param name="lOI" value="${properties.dataSets.SF.parameters.poi.central.locationOfInterests}" />
			<param name="targetDay" value="${properties.dataSets.SF.parameters.arrivalDay}" />
			<param name="targetTime" value="${properties.dataSets.SF.parameters.arrivalTime}" />
			<param name="dMax" value="${properties.dataSets.SF.parameters.dMax}" />
			<param name="sizeCheckPoints" value="${sizeCheckPoints}" />
			<param name="durationCheckPoints" value="${durationCheckPoints}" />
		</antcall>
	</target>

	<!-- ================================= 
					          target: runMemorySizeTestSFWalking              
					         ================================= -->
	<target name="runMemorySizeTestSFWalking" description="description">
		<antcall target="runMemorySizeTestSF">
			<param name="mode" value="UNIMODAL" />
			<param name="snapSize" value="${properties.dataSets.SF.snapSize(unimodal)}" />
		</antcall>
	</target>

	<!-- ================================= 
			          target: runMemorySizeTestDC              
			         ================================= -->
	<target name="runMemorySizeTestDC" description="description">
		<property name="dpChk" value="${properties.dataSets.DC.parameters.sizeCheckPoints.duration}" />
		<propertyregex property="durationCheckPoints" input="${dpChk}" regexp="^[0-9]{1,3}" select="${dpChk}" defaultValue="SetMe" global="true" />
		<property name="sizeCheckPoints" value="${properties.dataSets.DC.parameters.sizeCheckPoints.size}" />
		<property name="mode" value="MULTIMODAL" />
		<antcall target="memorySizeTest">
			<param name="mode" value="${mode}" />
			<param name="dataset" value="${properties.dataSets.DC(shortName)}" />
			<param name="name" value="${properties.dataSets.DC(name)}" />
			<param name="nOI" value="${properties.dataSets.DC.parameters.poi.central.nodeOfInterests}" />
			<param name="lOI" value="${properties.dataSets.DC.parameters.poi.central.locationOfInterests}" />
			<param name="targetDay" value="${properties.dataSets.DC.parameters.arrivalDay}" />
			<param name="targetTime" value="${properties.dataSets.DC.parameters.arrivalTime}" />
			<param name="dMax" value="${properties.dataSets.DC.parameters.dMax}" />
			<param name="sizeCheckPoints" value="${sizeCheckPoints}" />
			<param name="durationCheckPoints" value="${durationCheckPoints}" />
		</antcall>
	</target>

	<!-- ================================= 
				          target: runMemorySizeTestDCWalking              
				         ================================= -->
	<target name="runMemorySizeTestDCWalking" description="description">
		<antcall target="runMemorySizeTestDC">
			<param name="mode" value="UNIMODAL" />
			<param name="snapSize" value="${properties.dataSets.DC.snapSize(unimodal)}" />
		</antcall>
	</target>

	<!-- ================================= 
		          target: runMemorySizeTestST              
		         ================================= -->
	<target name="runMemorySizeTestST" description="description">
		<property name="dpChk" value="${properties.dataSets.ST.parameters.sizeCheckPoints.duration}" />
		<propertyregex property="durationCheckPoints" input="${dpChk}" regexp="^[0-9]{1,3}" select="${dpChk}" defaultValue="SetMe" global="true" />
		<property name="sizeCheckPoints" value="${properties.dataSets.ST.parameters.sizeCheckPoints.size}" />
		<property name="mode" value="MULTIMODAL" />
		<antcall target="memorySizeTest">
			<param name="mode" value="${mode}" />
			<param name="dataset" value="${properties.dataSets.ST(shortName)}" />
			<param name="name" value="${properties.dataSets.ST(name)}" />
			<param name="nOI" value="${properties.dataSets.ST.parameters.poi.central.nodeOfInterests}" />
			<param name="lOI" value="${properties.dataSets.ST.parameters.poi.central.locationOfInterests}" />
			<param name="targetDay" value="${properties.dataSets.ST.parameters.arrivalDay}" />
			<param name="targetTime" value="${properties.dataSets.ST.parameters.arrivalTime}" />
			<param name="dMax" value="${properties.dataSets.ST.parameters.dMax}" />
			<param name="sizeCheckPoints" value="${sizeCheckPoints}" />
			<param name="durationCheckPoints" value="${durationCheckPoints}" />
		</antcall>
	</target>

	<!-- ================================= 
			          target: runMemorySizeTestSTWalking              
			         ================================= -->
	<target name="runMemorySizeTestSTWalking" description="description">
		<antcall target="runMemorySizeTestST">
			<param name="mode" value="UNIMODAL" />
			<param name="snapSize" value="${properties.dataSets.ST.snapSize(unimodal)}" />
		</antcall>
	</target>

	<!-- ================================= 
			          target: runMemorySizeTestIT              
			         ================================= -->
	<target name="runMemorySizeTestIT" description="description">
		<property name="dpChk" value="${properties.dataSets.IT.parameters.sizeCheckPoints.duration}" />
		<propertyregex property="durationCheckPoints" input="${dpChk}" regexp="^[0-9]{1,3}" select="${dpChk}" defaultValue="SetMe" global="true" />
		<property name="sizeCheckPoints" value="${properties.dataSets.IT.parameters.sizeCheckPoints.size}" />
		<property name="mode" value="MULTIMODAL" />
		<antcall target="memorySizeTest">
			<param name="mode" value="${mode}" />
			<param name="dataset" value="${properties.dataSets.IT(shortName)}" />
			<param name="name" value="${properties.dataSets.IT(name)}" />
			<param name="nOI" value="${properties.dataSets.IT.parameters.poi.central.nodeOfInterests}" />
			<param name="lOI" value="${properties.dataSets.IT.parameters.poi.central.locationOfInterests}" />
			<param name="targetDay" value="${properties.dataSets.IT.parameters.arrivalDay}" />
			<param name="targetTime" value="${properties.dataSets.IT.parameters.arrivalTime}" />
			<param name="dMax" value="${properties.dataSets.IT.parameters.dMax}" />
			<param name="sizeCheckPoints" value="${sizeCheckPoints}" />
			<param name="durationCheckPoints" value="${durationCheckPoints}" />
		</antcall>
	</target>

	<!-- ================================= 
				          target: runMemorySizeTestITWalking              
				         ================================= -->
	<target name="runMemorySizeTestITWalking" description="description">
		<antcall target="runMemorySizeTestIT">
			<param name="mode" value="UNIMODAL" />
			<param name="snapSize" value="${properties.dataSets.IT.snapSize(unimodal)}" />
		</antcall>
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
	          target: memorySizeTest                      
	         - - - - - - - - - - - - - - - - - -->
	<target name="memorySizeTest" description="Measures the memory in respect to the node size of the isochrone.">
		<!-- default parameters, can be overwritten -->
		<property name="dataset" value="${properties.dataSets.BZ(shortName)}" />
		<property name="name" value="${properties.dataSets.BZ(name)}" />
		<property name="lOI" value="SetMe" />
		<property name="algorithmName" value="${properties.project.algorithm(name)}" />
		<property name="algorithmClassName" value="${properties.project.algorithm.classNames.memoryTest.size}" />
		<!-- overide only in some special cases -->
		<property name="mode" value="${properties.tests.memorySizeTest.mode}" />

		<property name="nOI" value="SetMe" />
		<if>
			<equals arg1="${nOI}" arg2="SetMe" />
			<then>
				<property name="outputFile" value="${algorithmName}_${dataset}_${mode}_${lOI}_${targetTime}_memory_size.csv" />
			</then>
			<else>
				<property name="outputFile" value="${algorithmName}_${dataset}_${mode}_${nOI}_${targetTime}_memory_size.csv" />
			</else>
		</if>

		<property name="durationCheckPoints" value="SetMe" />
		<if>
			<equals arg1="${durationCheckPoints}" arg2="SetMe" />
			<then>
				<property name="checkPts" value="${dMax}" />
			</then>
			<else>
				<property name="checkPts" value="${durationCheckPoints}" />
			</else>
		</if>
		<property name="sizeCheckPoints" value="SetMe" />

		<property name="outputWriting" value="${properties.tests.runtimeDurationTest.outputWriting}" />
		<property name="network" value="" />
		<property name="snapSize" value="${properties.dataSets.BZ.snapSize}" />
		<property name="speed" value="${properties.tests.memorySizeTest.speed}" />

		<echo message="Starting the memory-size tests for isochrones for ${name}" />
		<java classname="${properties.tests.memorySizeTest(className)}" classpathref="path.libraries" fork="true">
			<arg value="algorithmName=${algorithmName}" />
			<arg value="algorithmClassName=${algorithmClassName}" />
			<arg value="dbType=${properties.project.database}" />
			<arg value="dataset=${dataset}" />
			<arg value="nOI=${nOI}" />
			<arg value="lOI=${lOI}" />
			<arg value="dMax=${dMax}" />
			<arg value="targetTime=${targetDay}T${targetTime}" />
			<arg value="speed=${speed}" />
			<arg value="mode=${mode}" />
			<arg value="outputWriting=${properties.tests.memorySizeTest.outputWriting}" />
			<arg value="snapSize=${snapSize}" />
			<arg value="outputFile=${outputFile}" />
			<arg value="durationCheckPoints=${checkPts}" />
			<arg value="sizeCheckPoints=${sizeCheckPoints}" />
			<jvmarg value="-Xmx${properties.tests(reservedMemorySize)}m" />
		</java>
	</target>


	<!-- ### Start of memory count tuple tests ### -->

	<!-- ================================= 
				          target: memoryCountTuplesExperiments_MM              
				         ================================= -->
	<target name="memoryCountTuplesExperiments_MM">
		<antcall target="runMemoryCountTuplesTestBZ" />
		<antcall target="runMemoryCountTuplesTestSF" />
		<antcall target="runMemoryCountTuplesTestDC" />
		<antcall target="runMemoryCountTuplesTestST" />
		<antcall target="runMemoryCountTuplesTestIT" />
	</target>

	<!-- ================================= 
					          target: memoryCountTuplesExperiments_UM              
					         ================================= -->
	<target name="memoryCountTuplesExperiments_UM">
		<antcall target="runMemoryCountTuplesTestBZWalking" />
		<antcall target="runMemoryCountTuplesTestSFWalking" />
		<antcall target="runMemoryCountTuplesTestDCWalking" />
		<antcall target="runMemoryCountTuplesTestSTWalking" />
	</target>

	<!-- ================================= 
						          target: runMemoryCountTuplesTestBZ              
						         ================================= -->
	<target name="runMemoryCountTuplesTestBZ">
		<antcall target="memoryCountTuplesTest">
			<param name="dataset" value="${properties.dataSets.BZ(shortName)}" />
			<param name="name" value="${properties.dataSets.BZ(name)}" />
			<param name="nOI" value="${properties.dataSets.BZ.parameters.poi.central.nodeOfInterests}" />
			<param name="lOI" value="${properties.dataSets.BZ.parameters.poi.central.locationOfInterests}" />
			<param name="targetTime" value="${properties.dataSets.BZ.parameters.arrivalDay}T${properties.dataSets.BZ.parameters.arrivalTime}" />
			<param name="dMax" value="${properties.dataSets.BZ.parameters.dMax}" />
			<param name="durationCheckPoints" value="${properties.dataSets.BZ.parameters.durationCheckPoints}" />
		</antcall>
	</target>

	<!-- ================================= 
						          target: runMemoryCountTuplesTestBZWalking              
						         ================================= -->
	<target name="runMemoryCountTuplesTestBZWalking">
		<antcall target="runMemoryCountTuplesTestBZ">
			<param name="mode" value="UNIMODAL" />
		</antcall>
	</target>

	<!-- ================================= 
						          target: runMemoryCountTuplesTestSF              
						         ================================= -->
	<target name="runMemoryCountTuplesTestSF">
		<property name="mode" value="MULTIMODAL" />
		<antcall target="memoryCountTuplesTest">
			<param name="mode" value="${mode}" />
			<param name="dataset" value="${properties.dataSets.SF(shortName)}" />
			<param name="name" value="${properties.dataSets.SF(name)}" />
			<param name="nOI" value="${properties.dataSets.SF.parameters.poi.central.nodeOfInterests}" />
			<param name="lOI" value="${properties.dataSets.SF.parameters.poi.central.locationOfInterests}" />
			<param name="targetTime" value="${properties.dataSets.SF.parameters.arrivalDay}T${properties.dataSets.SF.parameters.arrivalTime}" />
			<param name="dMax" value="${properties.dataSets.SF.parameters.dMax}" />
			<param name="durationCheckPoints" value="${properties.dataSets.SF.parameters.durationCheckPoints}" />
		</antcall>
	</target>

	<!-- ================================= 
						          target: runMemoryCountTuplesTestSFWalking              
						         ================================= -->
	<target name="runMemoryCountTuplesTestSFWalking">
		<antcall target="runMemoryCountTuplesTestSF">
			<param name="mode" value="UNIMODAL" />
		</antcall>
	</target>

	<!-- ================================= 
							          target: runMemoryCountTuplesTestDC              
							         ================================= -->
	<target name="runMemoryCountTuplesTestDC">
		<property name="mode" value="MULTIMODAL" />
		<antcall target="memoryCountTuplesTest">
			<param name="mode" value="${mode}" />
			<param name="dataset" value="${properties.dataSets.DC(shortName)}" />
			<param name="name" value="${properties.dataSets.DC(name)}" />
			<param name="nOI" value="${properties.dataSets.DC.parameters.poi.central.nodeOfInterests}" />
			<param name="lOI" value="${properties.dataSets.DC.parameters.poi.central.locationOfInterests}" />
			<param name="targetTime" value="${properties.dataSets.DC.parameters.arrivalDay}T${properties.dataSets.DC.parameters.arrivalTime}" />
			<param name="dMax" value="${properties.dataSets.DC.parameters.dMax}" />
			<param name="durationCheckPoints" value="${properties.dataSets.DC.parameters.durationCheckPoints}" />
		</antcall>
	</target>

	<!-- ================================= 
							          target: runMemoryCountTuplesTestDCWalking              
							         ================================= -->
	<target name="runMemoryCountTuplesTestDCWalking">
		<antcall target="runMemoryCountTuplesTestDC">
			<param name="mode" value="UNIMODAL" />
		</antcall>
	</target>

	<!-- ================================= 
							          target: runMemoryCountTuplesTestST              
							         ================================= -->
	<target name="runMemoryCountTuplesTestST">
		<property name="mode" value="MULTIMODAL" />
		<antcall target="memoryCountTuplesTest">
			<param name="mode" value="${mode}" />
			<param name="dataset" value="${properties.dataSets.ST(shortName)}" />
			<param name="name" value="${properties.dataSets.ST(name)}" />
			<param name="nOI" value="${properties.dataSets.ST.parameters.poi.central.nodeOfInterests}" />
			<param name="lOI" value="${properties.dataSets.ST.parameters.poi.central.locationOfInterests}" />
			<param name="targetTime" value="${properties.dataSets.ST.parameters.arrivalDay}T${properties.dataSets.ST.parameters.arrivalTime}" />
			<param name="dMax" value="${properties.dataSets.ST.parameters.dMax}" />
			<param name="durationCheckPoints" value="${properties.dataSets.ST.parameters.durationCheckPoints}" />
		</antcall>
	</target>

	<!-- ================================= 
							          target: runMemoryCountTuplesTestITWalking              
							         ================================= -->
	<target name="runMemoryCountTuplesTestITWalking">
		<antcall target="runMemoryCountTuplesTestIT">
			<param name="mode" value="UNIMODAL" />
		</antcall>
	</target>

	<!-- ================================= 
									          target: runMemoryCountTuplesTestIT              
									         ================================= -->
	<target name="runMemoryCountTuplesTestIT">
		<property name="mode" value="MULTIMODAL" />
		<antcall target="memoryCountTuplesTest">
			<param name="mode" value="${mode}" />
			<param name="dataset" value="${properties.dataSets.IT(shortName)}" />
			<param name="name" value="${properties.dataSets.IT(name)}" />
			<param name="nOI" value="${properties.dataSets.IT.parameters.poi.central.nodeOfInterests}" />
			<param name="lOI" value="${properties.dataSets.IT.parameters.poi.central.locationOfInterests}" />
			<param name="targetTime" value="${properties.dataSets.IT.parameters.arrivalDay}T${properties.dataSets.IT.parameters.arrivalTime}" />
			<param name="dMax" value="${properties.dataSets.IT.parameters.dMax}" />
			<param name="durationCheckPoints" value="${properties.dataSets.IT.parameters.durationCheckPoints}" />
		</antcall>
	</target>

	<!-- ================================= 
									          target: runMemoryCountTuplesTestSTWalking              
									         ================================= -->
	<target name="runMemoryCountTuplesTestSTWalking">
		<antcall target="runMemoryCountTuplesTestST">
			<param name="mode" value="UNIMODAL" />
		</antcall>
	</target>


	<!-- - - - - - - - - - - - - - - - - - 
		          target: memoryCountTuplesTest        
		         - - - - - - - - - - - - - - - - - -->
	<target name="memoryCountTuplesTest" description="Measures the memory by counting the number of loaded tuples.">
		<!-- default parameters, can be overwritten -->
		<property name="dataset" value="${properties.dataSets.BZ(shortName)}" />
		<property name="name" value="${properties.dataSets.BZ(name)}" />
		<property name="nOI" value="SetMe" />
		<property name="lOI" value="SetMe" />
		<property name="targetTime" value="SetMe" />
		<property name="dMax" value="${properties.dataSets.BZ.parameters.dMax}" />

		<!-- overide only in some special cases -->
		<property name="mode" value="${properties.tests.memoryDBTest.mode}" />
		<if>
			<equals arg1="${nOI}" arg2="SetMe" />
			<then>
				<property name="outputFile" value="${properties.project.algorithm(name)}_${dataset}_${mode}_${lOI}_memory_duration_CT.csv" />
			</then>
			<else>
				<property name="outputFile" value="${properties.project.algorithm(name)}_${dataset}_${mode}_${nOI}_memory_duration_CT.csv" />
			</else>
		</if>
		<property name="durationCheckPoints" value="SetMe" />
		<if>
			<equals arg1="${durationCheckPoints}" arg2="SetMe" />
			<then>
				<property name="checkPts" value="${dMax}" />
			</then>
			<else>
				<property name="checkPts" value="${durationCheckPoints}" />
			</else>
		</if>

		<!-- overide only in some special cases -->
		<property name="mode" value="${properties.tests.memoryDBTest.mode}" />
		<property name="outputFile" value="${properties.project.algorithm(name)}_${dataset}_${mode}_${lOI}_memory_db.csv" />
		<property name="speed" value="${properties.tests.memoryDBTest.speed}" />

		<echo message="Starting the memory-duration tests for isochrones for ${name}" />
		<java classname="${properties.tests.memoryDBTest(className)}" classpathref="path.libraries" fork="true">
			<arg value="dbType=${properties.project.database}" />
			<arg value="algorithm=${properties.project.algorithm(name)}" />
			<arg value="dataset=${dataset}" />
			<arg value="nOI=${nOI}" />
			<arg value="lOI=${lOI}" />
			<arg value="dMax=${dMax}" />
			<arg value="targetTime=${targetTime}" />
			<arg value="speed=${speed}" />
			<arg value="mode=${mode}" />
			<arg value="outputWriting=${properties.tests.memoryDBTest.outputWriting}" />
			<arg value="outputFile=${outputFile}" />
			<arg value="durationCheckPoints=${checkPts}" />
			<jvmarg value="-Xmx${properties.tests(reservedMemorySize)}m" />
		</java>
	</target>

	<!-- ================================= 
		          target: computeAllStatistics_TQ              
		         ================================= -->
	<target name="computeAllStatistics_TQ" description="description">
		<foreach list="lowfrequent;highfrequent;mediumfrequent" param="location" delimiter=";" target="computeStatistics_TQ">
			<param name="suffix" value="TQ" />
		</foreach>
	</target>

	<!-- ================================= 
			          target: computeAllStatistics_Q              
			         ================================= -->
	<target name="computeAllStatistics_Q" description="description">
		<foreach list="central;periferical" param="location" delimiter=";" target="computeStatistics_Q">
			<param name="suffix" value="Q" />
		</foreach>
	</target>


	<!-- - - - - - - - - - - - - - - - - - 
		          target: computeStatistics_TQ                      
		         - - - - - - - - - - - - - - - - - -->
	<target name="computeStatistics_TQ" depends="mergeAll_TQ" description="description">
		<property name="dayInterval" value="setMe" />
		<property name="out.dir" value="${basedir}/out/${location}" />
		<property name="suffix" value="TQ" />

		<fileset id="inFileSet" dir="${out.dir}" includes="**_runtime_duration_all_${suffix}.csv" />
		<property name="in.files" refid="inFileSet" />
		<for list="${in.files}" param="in.file" delimiter=";">
			<sequential>
				<propertyregex property="out.file" input="@{in.file}" regexp="([^.]*)\_all_${suffix}.csv" select="\1" casesensitive="false" override="true" />
				<avg fileIn="${out.dir}/@{in.file}" fileOut="${out.dir}/${out.file}_stats_${suffix}.csv" columnIndex="3" />
			</sequential>
		</for>
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
			          target: computeStatistics_Q                      
			         - - - - - - - - - - - - - - - - - -->
	<target name="computeStatistics_Q" depends="mergeAll_Q" description="description">
		<property name="dayInterval" value="setMe" />
		<property name="out.dir" value="${basedir}/out/${location}" />
		<property name="suffix" value="all_Q" />

		<fileset id="inFileSet" dir="${out.dir}" includes="**_runtime_duration_all_${suffix}.csv" />
		<property name="in.files" refid="inFileSet" />
		<for list="${in.files}" param="in.file" delimiter=";">
			<sequential>
				<propertyregex property="out.file" input="@{in.file}" regexp="([^.]*)\_all_${suffix}.csv" select="\1" casesensitive="false" override="true" />
				<avg fileIn="${out.dir}/@{in.file}" fileOut="${out.dir}/${out.file}_stats_${suffix}.csv" columnIndex="3" />
			</sequential>
		</for>
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
	          target: mergeFiles                      
	         - - - - - - - - - - - - - - - - - -->
	<target name="mergeFiles_TQ">
		<!-- marks all files of the specific pattern -->
		<property name="algorithmName" value="MierWine" />
		<property name="dset" value="BZ" />
		<property name="qpoint" value="2000500" />
		<property name="out.dir" value="${basedir}/out/" />
		<property name="outfile" value="${out.dir}/${algorithmName}_${dset}_MULTIMODAL_${qpoint}_runtime_duration_all_TQ.csv" />

		<fileset id="inFileSet" dir="${out.dir}" includes="${algorithmName}_${dset}_MULTIMODAL_${qpoint}_**_runtime_duration.csv" />
		<!-- appends the content into a new file-->
		<property name="in.files" refid="inFileSet" />

		<!-- append header -->
		<propertyregex property="first.file" input="${in.files}" regexp="([^\;]*)" select="\1" casesensitive="false" />
		<loadfile property="header" srcfile="${out.dir}/${first.file}" failonerror="false">
			<filterchain>
				<headfilter lines="1" />
			</filterchain>
		</loadfile>
		<concat destfile="${out.dir}/tmp.txt">${header}</concat>

		<!-- merge the content (except header) of all selected files into a single file  -->
		<foreach list="${in.files}" delimiter=";" param="infile" target="replaceHeader">
			<param name="directory" value="${out.dir}/" />
			<param name="outfile" value="${out.dir}/tmp.txt" />
		</foreach>

		<!-- remove empty lines -->
		<copy file="${out.dir}/tmp.txt" toFile="${outfile}" overwrite="true">
			<filterchain>
				<ignoreblank />
			</filterchain>
		</copy>

		<delete file="${out.dir}/tmp.txt" />
	</target>

	<target name="mergeFiles_Q">
		<!-- marks all files of the specific pattern -->
		<property name="algorithmName" value="MierWine" />
		<property name="dset" value="BZ" />
		<property name="arrivalTime" value="SetMe" />
		<property name="out.dir" value="${basedir}/out/" />
		<property name="outfile" value="${out.dir}/${algorithmName}_${dset}_MULTIMODAL_${arrivalTime}_runtime_duration_all_Q.csv" />

		<fileset id="inFileSet" dir="${out.dir}" includes="${algorithmName}_${dset}_MULTIMODAL_**_${arrivalTime}_runtime_duration.csv" />
		<!-- appends the content into a new file-->
		<property name="in.files" refid="inFileSet" />

		<!-- append header -->
		<propertyregex property="first.file" input="${in.files}" regexp="([^\;]*)" select="\1" casesensitive="false" />
		<loadfile property="header" srcfile="${out.dir}/${first.file}" failonerror="false">
			<filterchain>
				<headfilter lines="1" />
			</filterchain>
		</loadfile>
		<concat destfile="${out.dir}/tmp.txt">${header}</concat>

		<!-- merge the content (except header) of all selected files into a single file  -->
		<foreach list="${in.files}" delimiter=";" param="infile" target="replaceHeader">
			<param name="directory" value="${out.dir}/" />
			<param name="outfile" value="${out.dir}/tmp.txt" />
		</foreach>

		<!-- remove empty lines -->
		<copy file="${out.dir}/tmp.txt" toFile="${outfile}" overwrite="true">
			<filterchain>
				<ignoreblank />
			</filterchain>
		</copy>

		<delete file="${out.dir}/tmp.txt" />
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
	          target: replaceHeader                      
	         - - - - - - - - - - - - - - - - - -->
	<target name="replaceHeader">
		<property name="infile" value="MierWine" />
		<property name="directory" value="setMe" />
		<property name="outfile" value="setMe" />
		<loadfile property="content" srcFile="${directory}/${infile}">
			<filterchain>
				<tokenfilter>
					<replaceregex pattern="^#(.*)" replace="" flags="g" />
				</tokenfilter>
			</filterchain>
		</loadfile>
		<concat destfile="${outfile}" append="true">${content}</concat>
	</target>

	<!-- ================================= 
	          target: mergeAll_TQ              
	         ================================= -->
	<target name="mergeAll_TQ" description="description">
		<property name="datasets" value="" />
		<for list="${properties.dataSets.BZ(shortName)};${properties.dataSets.SF(shortName)};${properties.dataSets.ST(shortName)};${properties.dataSets.IT(shortName)}" param="dset" delimiter=";">
			<sequential>
				<echo message="Merging dataset @{dset} ... " />
				<var name="qpoint" value="" />
				<switch value="@{dset}">
					<case value="${properties.dataSets.BZ(shortName)}">
						<var name="qpoint" value="${properties.dataSets.BZ.parameters.poi.central.nodeOfInterests}" />
					</case>
					<case value="${properties.dataSets.SF(shortName)}">
						<var name="qpoint" value="${properties.dataSets.SF.parameters.poi.central.nodeOfInterests}" />
					</case>
					<case value="${properties.dataSets.ST(shortName)}">
						<var name="qpoint" value="${properties.dataSets.ST.parameters.poi.central.nodeOfInterests}" />
					</case>
					<case value="${properties.dataSets.IT(shortName)}">
						<var name="qpoint" value="${properties.dataSets.IT.parameters.poi.central.nodeOfInterests}" />
					</case>
				</switch>
				<for list="lowfrequent;highfrequent;mediumfrequent" param="location" delimiter=";">
					<sequential>
						<antcall target="mergeFiles_TQ">
							<param name="algorithmName" value="${properties.project.algorithm(name)}" />
							<param name="dset" value="@{dset}" />
							<param name="qpoint" value="${qpoint}" />
							<param name="out.dir" value="${basedir}/out/@{location}" />
						</antcall>
					</sequential>
				</for>
			</sequential>
		</for>
	</target>

	<!-- ================================= 
		          target: mergeAll_Q              
		         ================================= -->
	<target name="mergeAll_Q" description="description">
		<property name="datasets" value="" />
		<for list="${properties.dataSets.BZ(shortName)};${properties.dataSets.SF(shortName)};${properties.dataSets.ST(shortName)}" param="dset" delimiter=";">
			<sequential>
				<echo message="Merging dataset @{dset} ... " />
				<var name="arrivalTime" value="" />
				<switch value="@{dset}">
					<case value="${properties.dataSets.BZ(shortName)}">
						<var name="arrivalTime" value="${properties.dataSets.BZ.parameters.arrivalTime}" />
					</case>
					<case value="${properties.dataSets.SF(shortName)}">
						<var name="arrivalTime" value="${properties.dataSets.SF.parameters.arrivalTime}" />
					</case>
					<case value="${properties.dataSets.ST(shortName)}">
						<var name="arrivalTime" value="${properties.dataSets.ST.parameters.arrivalTime}" />
					</case>
					<case value="${properties.dataSets.IT(shortName)}">
						<var name="arrivalTime" value="${properties.dataSets.IT.parameters.arrivalTime}" />
					</case>
				</switch>
				<for list="central;periferical" param="location" delimiter=";">
					<sequential>
						<antcall target="mergeFiles_Q">
							<param name="algorithmName" value="${properties.project.algorithm(name)}" />
							<param name="dset" value="@{dset}" />
							<param name="arrivalTime" value="${arrivalTime}" />
							<param name="out.dir" value="${basedir}/out/@{location}" />
						</antcall>
					</sequential>
				</for>
			</sequential>
		</for>
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
	          target: computeBreakEvenPoint                      
	         - - - - - - - - - - - - - - - - - -->
	<target name="computeBreakEvenPoint">
		<property name="dijkstra.file" value="setMe" />
		<property name="in.file" value="setMe" />
		<property name="in.dir" value="${basedir}/out" />
		<property name="out.dir" value="${in.dir}/breakeven" />

		<property name="column.index" value="2" />
		<propertyregex property="file.out.prefix" input="${in.file}" regexp="([^.]*)\.csv" select="\1" casesensitive="false" />
		<echo message="${file.out.prefix}" />
		<breakevenPoint fileIn2="${dijkstra.file}" fileIn1="${in.dir}/${in.file}" columnIndex="${column.index}" fileOut="${out.dir}/${file.out.prefix}_BEPt.csv" />
	</target>


	<!-- ================================= 
          target: runtimeDurationExperimentsVarQ_All              
         ================================= -->
	<target name="runtimeDurationExperimentsVarQ_All" description="Start all experiments measuring the runtime by varying the query point in dependency of dMax">
		<antcall target="runtimeDurationExperimentsVarQ_BZ" />
		<antcall target="runtimeDurationExperimentsVarQ_SF" />
		<antcall target="runtimeDurationExperimentsVarQ_ST" />
		<antcall target="runtimeDurationExperimentsVarQ_IT" />
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
	          target: runtimeDurationExperimentsVarQ_BZ                      
	         - - - - - - - - - - - - - - - - - -->
	<target name="runtimeDurationExperimentsVarQ_BZ" description="description">
		<delete failonerror="false">
			<fileset dir="${basedir}/out/central">
				<include name="*${properties.dataSets.BZ}*_runtime_duration.csv" />
			</fileset>
			<fileset dir="${basedir}/out/periferical">
				<include name="*${properties.dataSets.BZ}*_runtime_duration.csv" />
			</fileset>
			<fileset dir="${basedir}/out/mediumfrequent">
				<include name="*${properties.dataSets.BZ}*_runtime_duration.csv" />
			</fileset>
		</delete>

		<loadproperties srcFile="${basedir}/in/${properties.dataSets.BZ(shortName)}_querypoints.properties" />
		<foreach list="${rndm_center_q}" target="runtimeDurationTestBZ" param="lOI" delimiter=";">
			<param name="outputDir" value="${basedir}/out/central" />
			<param name="nOI" value="SetMe" />
		</foreach>
		<foreach list="${rndm_perif_q}" target="runtimeDurationTestBZ" param="lOI" delimiter=";">
			<param name="outputDir" value="${basedir}/out/periferical" />
			<param name="nOI" value="SetMe" />
		</foreach>

	</target>

	<!-- - - - - - - - - - - - - - - - - - 
		          target: runtimeDurationExperimentsVarQ_SF                      
		         - - - - - - - - - - - - - - - - - -->
	<target name="runtimeDurationExperimentsVarQ_SF" description="description">
		<delete failonerror="false">
			<fileset dir="${basedir}/out/central">
				<include name="*${properties.dataSets.SF}*_runtime_duration.csv" />
			</fileset>
			<fileset dir="${basedir}/out/periferical">
				<include name="*${properties.dataSets.SF}*_runtime_duration.csv" />
			</fileset>
			<fileset dir="${basedir}/out/mediumfrequent">
				<include name="*${properties.dataSets.SF}*_runtime_duration.csv" />
			</fileset>
		</delete>

		<loadproperties srcFile="${basedir}/in/${properties.dataSets.SF(shortName)}_querypoints.properties" />
		<foreach list="${rndm_center_q}" target="runtimeDurationTestSF" param="lOI" delimiter=";">
			<param name="outputDir" value="${basedir}/out/central" />
			<param name="nOI" value="SetMe" />
		</foreach>
		<foreach list="${rndm_perif_q}" target="runtimeDurationTestSF" param="lOI" delimiter=";">
			<param name="outputDir" value="${basedir}/out/periferical" />
			<param name="nOI" value="SetMe" />
		</foreach>

	</target>

	<!-- - - - - - - - - - - - - - - - - - 
		          target: runtimeDurationExperimentsVarQ_ST                      
		         - - - - - - - - - - - - - - - - - -->
	<target name="runtimeDurationExperimentsVarQ_ST" description="description">
		<delete failonerror="false">
			<fileset dir="${basedir}/out/central">
				<include name="*${properties.dataSets.ST}*_runtime_duration.csv" />
			</fileset>
			<fileset dir="${basedir}/out/periferical">
				<include name="*${properties.dataSets.ST}*_runtime_duration.csv" />
			</fileset>
			<fileset dir="${basedir}/out/mediumfrequent">
				<include name="*${properties.dataSets.ST}*_runtime_duration.csv" />
			</fileset>
		</delete>

		<loadproperties srcFile="${basedir}/in/${properties.dataSets.ST(shortName)}_querypoints.properties" />
		<foreach list="${rndm_center_q}" target="runtimeDurationTestST" param="lOI" delimiter=";">
			<param name="outputDir" value="${basedir}/out/central" />
			<param name="nOI" value="SetMe" />
		</foreach>
		<foreach list="${rndm_perif_q}" target="runtimeDurationTestST" param="lOI" delimiter=";">
			<param name="outputDir" value="${basedir}/out/periferical" />
			<param name="nOI" value="SetMe" />
		</foreach>

	</target>

	<!-- - - - - - - - - - - - - - - - - - 
		          target: runtimeDurationExperimentsVarQ_IT                      
		         - - - - - - - - - - - - - - - - - -->
	<target name="runtimeDurationExperimentsVarQ_IT" description="description">
		<delete failonerror="false">
			<fileset dir="${basedir}/out/central">
				<include name="*${properties.dataSets.IT}*_runtime_duration.csv" />
			</fileset>
			<fileset dir="${basedir}/out/periferical">
				<include name="*${properties.dataSets.IT}*_runtime_duration.csv" />
			</fileset>
			<fileset dir="${basedir}/out/mediumfrequent">
				<include name="*${properties.dataSets.IT}*_runtime_duration.csv" />
			</fileset>
		</delete>

		<loadproperties srcFile="${basedir}/in/${properties.dataSets.IT(shortName)}_querypoints.properties" />
		<foreach list="${rndm_center_q}" target="runtimeDurationTestIT" param="lOI" delimiter=";">
			<param name="outputDir" value="${basedir}/out/central" />
			<param name="nOI" value="SetMe" />
		</foreach>
		<foreach list="${rndm_perif_q}" target="runtimeDurationTestIT" param="lOI" delimiter=";">
			<param name="outputDir" value="${basedir}/out/periferical" />
			<param name="nOI" value="SetMe" />
		</foreach>

	</target>

	<target name="runtimeDurationTestBZDebug" description="description">
		<var name="durationCheckpoints" value="1" />
		<for begin="2" end="60" step="1" param="duration">
			<sequential>
				<var name="durationCheckpoints" value="${durationCheckpoints},@{duration}" />
			</sequential>
		</for>

		<antcall target="runtimeDurationTestBZ">
			<param name="durationCheckPoints" value="${durationCheckpoints}" />
			<param name="frequency" value="1" />
		</antcall>
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
		          target: generateDensities                      
		         - - - - - - - - - - - - - - - - - -->
	<target name="generateDensities">
		<property name="vertex.table" value="bz_nodes" />
		<property name="density.table" value="bz_test_density" />
		<property name="sizePoints" value="500,1000,1500,2000,2500,3000,3500" />
		<property name="maxRange" value="10000" />
		<property name="percentage" value="10" />
		<property name="db.host" value="localhost" />
		<property name="db.name" value="iso2" />
		<property name="db.port" value="5432" />
		<property name="db.user" value="postgres" />
		<property name="db.passwd" value="AifaXub2" />

		<densityGeneration vertexTable="${vertex.table}" densityTable="${density.table}" sizePoints="${sizePoints}" host="${db.host}" dbName="${db.name}" port="${db.port}" user="${db.user}" passwd="${db.passwd}" />
	</target>
	
	<!-- - - - - - - - - - - - - - - - - - 
			          target: generateVertexDensities                      
			         - - - - - - - - - - - - - - - - - -->
	<target name="generateVertexDensities">
			<property name="vertex.table" value="bz_nodes" />
			<property name="density.table" value="bz_test_vertex_density" />
			<property name="sizePoints" value="500,1000,1500,2000,2500,3000,3500" />
			<property name="maxRange" value="10000" />
			<property name="percentage" value="10" />
			<property name="db.host" value="localhost" />
			<property name="db.name" value="iso2" />
			<property name="db.port" value="5432" />
			<property name="db.user" value="postgres" />
			<property name="db.passwd" value="AifaXub2" />

			<vertexDensityGeneration vertexTable="${vertex.table}" densityTable="${density.table}" sizePoints="${sizePoints}" host="${db.host}" dbName="${db.name}" port="${db.port}" user="${db.user}" passwd="${db.passwd}" maxRange="${maxRange}" percentage="${percentage}" />
		</target>


</project>